{
  "swagger": "2.0",
  "info": {
    "version": "2.3.2",
    "title": "paymentInitiationServices",
    "description": "In this section are described the APIs to manage the Payment Initiation Services. This APIs are dedicated to the TPPs."
  },
  "paths": {
    "/payments/{payment-product}": {
      "post": {
        "responses": {
          "201": {
            "description": "Resource created successfully",
            "headers": {
              "location": {
                "description": "Location of the created resource (if created)",
                "type": "string"
              },
              "x-request-id": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "type": "string"
              },
              "aspsp-sca-approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed. Possible values are:\n\n- EMBEDDED\n- DECOUPLED\n- REDIRECT\n\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/paymentInitiationRequestResponseType"
            }
          },
          "400": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0008</p>\n</td>\n<td width=\"378\">\n<p>Custom bean validation error - {field name} {condition violated}</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0002</p>\n</td>\n<td width=\"378\">\n<p>Missing header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0003</p>\n</td>\n<td width=\"378\">\n<p>Invalid header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.000.A0039</p>\n</td>\n<td width=\"394\">\n<p>Error received from ASPSP system: invalid or missing parameter. Please check the Annex Interface Agreement.</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.188.A0037</p>\n</td>\n<td width=\"394\">\n<p>No SCA methods applicable.</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.000.A0039</p>\n</td>\n<td width=\"394\">\n<p>Error received from ASPSP system: invalid or missing parameter. Please check the Annex Interface Agreement.</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.188.A0042</p>\n</td>\n<td width=\"394\">\n<p>The payment initiation without debtorAccount isn't currently supported by the ASPSP. Please refer to the End Point Domains document, published on the API portal Technical Documents Section to know when the ASPSP has planned the support of this payment flow</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "401": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0009</p>\n</td>\n<td width=\"378\">\n<p>Invalid signature</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "403": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.001.A0004</p>\n</td>\n<td width=\"378\">\n<p>Unknown ASPSP</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.001.A0020</p>\n</td>\n<td width=\"378\">\n<p>Unknown TPP</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.185.A0016</p>\n</td>\n<td width=\"378\">\n<p>Product not found for ASPSP</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "404": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.185.A0031</p>\n</td>\n<td width=\"378\">\n<p>Product not found</p>\n</td>\n\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "500": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.000.A0000</p>\n</td>\n<td width=\"378\">\n<p>Generic Error</p>\n</td>\n</tr>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "502": {
            "description": "<table width=\"661\">\n<tbody><tr>\n<td width=\"147\">\n<p>PSD2_01.000.A0038</p>\n</td>\n<td width=\"375\">\n<p>Invalid response received by the ASPSP system</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n</tbody>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          }
        },
        "description": "This is the first API dedicated to initiate a single payment request. \nA single payment belongs to one of the following payment-products: \n- sepa-credit-transfers\n- instant-sepa-credit-transfers\n- target-2-payments\n- cross-border-credit-transfers \nThe CBI Globe published a dedicated endpoint of this API for each payment-product, therefore all the participant ASPSPs can choose their supported payment-products.\n\nThe TPP must provide the certificate, issued by the competent National Authority and qualifying the TPP as a PISP, in order to access to this API.\nAmong the mandatory parameters the TPP must provide to use this API, the main ones are:\n-\tpayment-product: to address the dedicated API endpoint\n-\taspsp-product-code: an ASPSP can manage different products to differentiate the PSU authentication mode. The available products for a given ASPSP can be retrieved through the retrieveAspsps API.\n-\ttransactionType: used to characterize the payment, to correctly manage the transaction risk analysis phase.\n\nThis API allows to start a payment request also without the debtorAccount (as described here below), but in case the target ASPSP wouldn’t yet support the debtorAccount selection flow the  error PSD2_01.188.A0042 will be raised.\n\nHere below some possible cases:\n-\tIf the TPP doesn’t provide the debtorAccount in the request, then the API creates a payment resource and gives back its identifier asking the TPP/PSU for:\n\t-\tchoose among the available SCA methods, in case there are more than one applicable, to complete the account selection phase\n\t-\tprovide its credentials to perform the weak authentication. It is the case when the PSU_ID isn’t present in the paymentInitiationRequest and the selected SCA method has a DECOUPLED approach with weak authentication in EMBEDDED way\n\t-\taccess the ASPSP channels to authenticate itself. It is the case when the PSU_ID isn’t present in the paymentInitiationRequest and the selected SCA method has a DECOUPLED approach with weak authentication in REDIRECT way.\n\t-\taccess the ASPSP channels to authenticate itself and perform the selection of the account the payment must be charged on. It is the case when the selected SCA method has a DECOUPLED (and the PSU_ID has been provided in the paymentInitiationRequest) or REDIRECT approach.\n-\tIf the TPP provides the debtorAccount then:\n\t-\ttIf the TPP doesn't provide the PSU identifier in the request, then the API creates a payment resource and gives back its identifier, asking the PSU to authenticate himself according to the ASPSP configuration.\n\t-\tIf the TPP provides the PSU identifier, the transaction risk analysis and the SCA exemption evaluation will be executed. Depending on the result of this phase, the API brings the process flow in one of the following status:\n\t\t-\tPayment rejected due to fraud detection;\n\t\t-\tPayment accepted with the needed PSU simple or strong authentication. In this case, the API gives back the payment identifier asking the PSU for authenticate himself according to the ASPSP configuration.",
        "summary": "This API creates a payment initiation resource with all data relevant for the corresponding payment product; the ASPSP will publish which of the payment products/endpoints will be supported. This is the first step in the API to initiate the related payment.",
        "parameters": [
          {
            "in": "header",
            "description": "The value of the access token",
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This token is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding AIS service in the same session.  Reserved for future use.",
            "name": "psu-authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The ASPSP code",
            "name": "aspsp-code",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "UUID of the request, unique to the call, as determined by the initiating party.",
            "name": "x-request-id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The ID of the PSU in the ASPSP client interface. Mandatory if \"psu-corporate-id\" is valorized.",
            "name": "psu-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility. Mandatory if \"psu-corporate-id\" is valorized.",
            "name": "psu-id-type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Identification of a Corporate,  only used in a corporate context. ",
            "name": "psu-corporate-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This is describing the type of the identification needed by the ASPSP to identify the PSU-Corporate-ID content.",
            "name": "psu-corporate-id-type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service. This then contains the \"consentId\" of the related AIS consent, which was performed prior to this payment initiation.",
            "name": "consent-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The forwarded Agent header field of the http request between PSU and TPP.",
            "name": "psu-user-agent",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.",
            "name": "psu-ip-address",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.",
            "name": "psu-ip-port",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.",
            "name": "psu-accept",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The charset information sent  by the PSU",
            "name": "psu-accept-charset",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The encoding information sent  by the PSU",
            "name": "psu-accept-encoding",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The language information sent  by the PSU",
            "name": "psu-accept-language",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "HTTP method used at the PSU-TPP interface, if available. Valid values are: \n- GET \n- POST \n- PUT \n- PATCH \n- DELETE",
            "name": "psu-http-method",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation. In case of an installation identification this ID need to be unaltered until removal from device.",
            "name": "psu-device-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\nFormat using [RFC 2426], i.e. GEO:<latitude>,< longitude >.",
            "name": "psu-geo-location",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "PSU malware infection",
            "name": "psu-malware-infection",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "PSU Abnormal use of the access device or software",
            "name": "psu-abnormal-use",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Application name",
            "name": "app-name",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Application version",
            "name": "app-version",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Brand of the device",
            "name": "device-brand",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Model of the mobile device",
            "name": "device-model",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The mobile device name defined by the end user. Note: In Android, this device element is returned based on the name defined in the Bluetooth settings.",
            "name": "device-name",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "International Mobile Equipment Identity",
            "name": "device-imei",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Vendor identification",
            "name": "device-vendor-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "SIM number 1",
            "name": "sim1-number",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "SIM number 2",
            "name": "sim2-number",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The number of bits used to display one color.\nThe possible values are: \n32, 24, 16, or 8",
            "name": "screen-color-depth",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Width of the user's screen \nNote For iOS, the resolution measurement is in points. For other operating systems, the resolution measurement is in pixels.",
            "name": "screen-width",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Height of the user's screen.\nNote For iOS, the resolution measurement is in points. For other operating systems, the resolution measurement is in pixels.",
            "name": "screen-height",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Vertical space of the user's screen.  Note For iOS, the resolution measurement is in points. For other operating systems, the resolution measurement is in pixels.",
            "name": "screen-vertical-space",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The software plug-ins installed in the user's browser.",
            "name": "software-plug-ins",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The user's current time zone, related to UTC (for example UTC+01:00)",
            "name": "time-zone",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The language that the user has set in the browser ",
            "name": "browser-language",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A Boolean value that indicates whether Java is enabled in the browser. Only \"true\" or \"false\" value is accepted.",
            "name": "java-support",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A Boolean value that indicates whether cookies are enabled in the user's browser. Only \"true\" or \"false\" value is accepted.",
            "name": "psu-cookie-support",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The operating system installed. ",
            "name": "device-os",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The operating system version installed",
            "name": "device-os-version",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The major version of the browser.",
            "name": "major-version",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The browser being used. Possible values are: Netscape, Mozilla, Explorer, Camino, Firefox, Konqueror, iCab, Opera, Safari, OmniWeb, Chrome.",
            "name": "browser-type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Different identifiers are retrieved for each of the operating systems: \n-iOS 4.x-6.x àThe Wi-Fi MAC address.\n -iOS 7.x and later à The identifierFor Vendor property of the UIDevice class.\n -Android àThe Internationa l Mobile Equipment Identity (IMEI) for GSM. ",
            "name": "hardware-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A positive value indicates that the device is rooted or jailbroken. Only \"true\" or \"false\" value is accepted.",
            "name": "device-rooted",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A positive value indicates that the client device is an emulator. Only \"true\" or \"false\" value is accepted.",
            "name": "emulator",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The client application creates and saves a random unique identifier, which the client application can read. This enables verification that the application is genuine and not malicious malware. \nNote: For iOS system, the value is permanently stored in the keychain. \nFor Android system the value is stored in the private storage of the application. This value is only stored until the application is uninstalled.",
            "name": "rsa-application-key",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The currently installed RSA Adaptive Authentication Mobile SDK Modules version and build number.",
            "name": "sdk-version",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The language displayed in the mobile device.",
            "name": "languages",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Indicates whether or not the mobile device supports multitasking. Only \"true\" or \"false\" value is accepted.",
            "name": "multitasking-supported",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A GSM Cell ID (CID) is a unique number used to identify each base transceiver station (BTS) or sector of a BTS within a location area code (LAC) or GSM network.  Note This device element is not supported by iOS.  ",
            "name": "cell-tower-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The height of the mobile device above the ellipsoid. This device element is measured in meters.",
            "name": "geolocation-altitude",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The accuracy of the mobile device's altitude. This device element is returned in meters.",
            "name": "geolocation-altitude-accuracy",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The direction of travel of the mobile device. This device element is returned in degrees.",
            "name": "geolocation-heading",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The radius of uncertainty for the geo-location of the mobile device. This device element is measured in meters. A negative value indicates that the geo-location latitude or longitude of the mobile device is invalid.",
            "name": "geolocation-horizontal-accuracy",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The current ground speed of the mobile device. This device element is returned in meters per second.",
            "name": "geolocation-speed",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "There are five possible status codes:\n0=success The geolocation is successfully retrieved. \n1=deny The end user denies location collection. \n2=location status not available. The geolocation position is unavailable. \n3=location status timeout The geolocation is timed out. \n4=location status not supported The geolocation collection is not supported.",
            "name": "geolocation-status",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The time that the geo-location was created. This device element is returned in milliseconds.",
            "name": "geolocation-timestamp",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The local area code. \nNote For Android, this device element is only available for GSM devices and does not support CDMA devices. \nNote This device element is not supported by iOS.",
            "name": "location-area-code",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The Wi-Fi card MAC address.  Note This device element is mandatory for iOS versions 4.x– 6.x.",
            "name": "wifi-mac-address",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The country code of the mobile device.",
            "name": "mcc",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The mobile carrier code.",
            "name": "mnc",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The basic service set identification (BSSID) for each basic service set. ",
            "name": "wifi-networks-data-bssid",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The wireless signal strength in the database management system expressed in decibel/meters .\nFor example -40 dBm.\nNote This device element is not supported by iOS.",
            "name": "wifi-networks-data-signal-strength",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The Service Set Identifier (SSID). (the network name)",
            "name": "wifi-networks-data-ssid",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Define the channel used from PSU in order to send the request to TPP (WEB or APP)  ",
            "name": "channel",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The operating system identification:\n- iOS: Universally Unique Identifier (UUID) (in this case it is length 36 characters)\n- Android: The client application creates a random unique identifier that permanently persists in the keychain (Android_ID) (in this case it is length 16 characters)",
            "name": "os-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Mobile Station International Subscriber Directory Number (MSISDN).",
            "name": "phone-number",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The International Mobile Subscriber Identity (IMSI)",
            "name": "sim-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Only \"true\" or \"false\" values are accepted.\nIf it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, It will be choosen the SCA approach depending on the SCA method chosen by the TPP/PSU.",
            "name": "tpp-redirect-preferred",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. *This redirect link must be contained, if the tpp-redirect-preferred flag is contained and equals \"true\"",
            "name": "tpp-redirect-uri",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after the authentication of the PSU on the ASPSP system.",
            "name": "tpp-authentication-redirect-uri",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case of a negative result of the redirect SCA method. This might be ignored by the ASPSP.",
            "name": "tpp-nok-redirect-uri",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request. \nThe \"Digest\" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512.",
            "name": "digest",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n\nThis string contains the following fields separated by commas:\n\n- keyId: The ‘keyId‘ field is an opaque string that the server can use to look up the component they need to validate the signature. It could be an SSH key fingerprint, a URL to machine-readable key data, an LDAP DN, etc. Management of keys and assignment of ‘keyId‘ is out of scope for this document. \nSerial Number of the TPP's certificate included in the “Certificate” header of this request. \nSerial Number of the TPP's certificate included in the “TPP-Signature-Certificate” header of this request.\nIt shall be formatted as follows: keyId=“SN=XXX,CA=YYYYYYYYYYYYYYYY” where “XXX” is the serial number of the certificate in hexadecimal coding given in the TPP-Signature-Certificate-Header and “YYYYYYYYYYYYYYYY” is the full Distinguished Name of the Certification Authority having produced this certificate.\n\n- algorithm: The ‘algorithm’ parameter is used to specify the digital signature algorithm to use when generating the signature.\nThe algorithm must identify the same algorithm for the signature as presented in the certificate (Element “TPP-Certificate”) of this Request. \nThe available values are: “rsa-sha256” or “rsa-sha512”\n\n- Headers: The ‘headers’ parameter is used to specify the list of HTTP headers included when generating the signature for the message. If specified, it should be a lowercased, quoted list of HTTP header fields, separated by a single space character. If not specified, implementations MUST operate as if the field were specified with a single value, the ‘Date’ header, in the list of HTTP headers. Note that the list order is important, and MUST be specified in the order the HTTP header field-value pairs are concatenated together during signing. \n\nMust include \n- “digest”, \n- “x-request-id”, \n- “psu-id” (if and only if “PSU-ID” is included as a header of the HTTP-Request). \n- “psu-corporate-id” (if and only if “psu-corporate-id” is included as a header of the HTTP-Request). \n- “Date” \n- \"tpp-redirect-uri\"(if and only if \"tpp-redirect-uri\" is included as a header of the HTTP-Request). \n \n\nNo other entries may be included.\n\n- Signature: The ‘signature’ parameter is a base 64 encoded digital signature, as described in RFC 4648 [RFC4648], Section 4. The client uses the ‘algorithm’ and ‘headers’ signature parameters to form a canonicalised ‘signing string’. This ‘signing string’ is then signed with the key associated with ‘keyId’ and the algorithm corresponding to ‘algorithm’. The ‘signature’ parameter is then set to the base 64 encoding of the signature.",
            "name": "signature",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This is a X509 certificate that the TPP uses for signing the request, in base64 encoding. \nThis certificate is in PEM format without the \"-----BEGIN CERTIFICATE-----\" and \"-----END CERTIFICATE-----\".\nMust be contained if a signature is contained, see above.",
            "name": "tpp-signature-certificate",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "ASPSP product code. It must be a string without spaces and special characters.",
            "name": "aspsp-product-code",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The date provided by the TPP.  Format: EEE, dd MMM yyyy hh:mm:ss z",
            "name": "date",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The addressed payment product endpoint.\n\nThe value list of products supported is: \n\n- sepa-credit-transfers\n- instant-sepa-credit-transfers\n- target-2-payments\n- cross-border-credit-transfers",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentInitiationRequestRequestType"
            }
          }
        ],
        "x-auth-type": "Application",
        "x-throttling-tier": "Unlimited",
        "operationId": "paymentInitiationRequest"
      }
    },
    "/payments/{payment-product}/{payment-id}/status": {
      "get": {
        "responses": {
          "200": {
            "description": "Service executed successfully",
            "headers": {
              "x-request-id": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "type": "string"
              },
              "psu-id": {
                "description": "The PSU identifier.",
                "type": "string"
              },
              "psu-id-type": {
                "description": "The PSU identifier type.",
                "type": "string"
              },
              "psu-corporate-id": {
                "description": "The PSU corporate identifier. This field is relevant only in a corporate context.",
                "type": "string"
              },
              "psu-corporate-id-type": {
                "description": "The PSU corporate identifier. Might be mandated by the ASPSP in addition if the PSU-Corporate-ID is contained.",
                "type": "string"
              },
              "aspsp-sca-approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed. Possible values are:\n\n- EMBEDDED\n- DECOUPLED\n- REDIRECT\n\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/getPaymentStatusRequestResponseType"
            }
          },
          "400": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.000.A0002</p>\n</td>\n<td width=\"387\">\n<p>Missing header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.000.A0003</p>\n</td>\n<td width=\"387\">\n<p>Invalid header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.000.A0040</p>\n</td>\n<td width=\"394\">\n<p>Operation not allowed: authentication required</p>\n</td>\n</tr>\n</tbody><tr>\n<td width=\"170\">\n<p>PSD2_01.000.A0039</p>\n</td>\n<td width=\"394\">\n<p>Error received from ASPSP system: invalid or missing parameter. Please check the Annex Interface Agreement.</p>\n</td>\n</tr>\n\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "401": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.000.A0009</p>\n</td>\n<td width=\"387\">\n<p>Invalid signature</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "403": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.001.A0004</p>\n</td>\n<td width=\"387\">\n<p>Unknown ASPSP</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"387\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.185.A0016</p>\n</td>\n<td width=\"387\">\n<p>Product not found for ASPSP</p>\n</td>\n</tr>\n<tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "404": {
            "description": "<table width=\"661\">\n<tbody>\n<td width=\"177\">\n<p>PSD2_01.188.A0010</p>\n</td>\n<td width=\"387\">\n<p>Entity not found</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "409": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0001</p>\n</td>\n<td width=\"378\">\n<p>Operation not Allowed</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "500": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.000.A0000</p>\n</td>\n<td width=\"378\">\n<p>Generic Error</p>\n</td>\n</tr></tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "502": {
            "description": "<table width=\"661\">\n<tbody>  <tr>\n<td width=\"147\">\n<p>PSD2_01.000.A0038</p>\n</td>\n<td width=\"375\">\n<p>Invalid response received by the ASPSP system</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr></tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          }
        },
        "description": "Through this API, the TPP can retrieve from the ASPSP systems the transaction status of a previously initiated single payment order. The API gives back also the SCA status and the PSU Authentication Status of the related payment resource managed by the CBI Globe. \n\nThe CBI Globe publishes a dedicated endpoint for each payment-products available also for this API, as well for the paymentInitiationRequest.\n\nThe TPP must provide the certificate, issued by the competent National Authority and qualifying the TPP as a PISP, in order to access to this API.\n\nAmong the mandatory parameters the TPP must provide to use this API, the main ones are:\n-\tpayment-product: to address the dedicated API endpoint\n-\tpayment-id: to identify the payment resource  \n",
        "summary": "This API retrieves the status of a payment initiated transaction.",
        "parameters": [
          {
            "in": "header",
            "description": "The value of the access token",
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This token is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding AIS service in the same session.  Reserved for future use.",
            "name": "psu-authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The ASPSP code",
            "name": "aspsp-code",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "UUID of the request, unique to the call, as determined by the initiating party.",
            "name": "x-request-id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request. \nThe \"Digest\" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512.",
            "name": "digest",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\nThis string contains the following fields separated by commas:\n\n- keyId: The ‘keyId‘ field is an opaque string that the server can use to look up the component they need to validate the signature. It could be an SSH key fingerprint, a URL to machine-readable key data, an LDAP DN, etc. Management of keys and assignment of ‘keyId‘ is out of scope for this document. \nSerial Number of the TPP's certificate included in the “Certificate” header of this request. \nSerial Number of the TPP's certificate included in the “TPP-Signature-Certificate” header of this request.\nIt shall be formatted as follows: keyId=“SN=XXX,CA=YYYYYYYYYYYYYYYY” where “XXX” is the serial number of the certificate in hexadecimal coding given in the TPP-Signature-Certificate-Header and “YYYYYYYYYYYYYYYY” is the full Distinguished Name of the Certification Authority having produced this certificate.\n- algorithm: The ‘algorithm’ parameter is used to specify the digital signature algorithm to use when generating the signature.\nThe algorithm must identify the same algorithm for the signature as presented in the certificate (Element “TPP-Certificate”) of this Request. \nThe available values are: “rsa-sha256” or “rsa-sha512”\n- Headers: The ‘headers’ parameter is used to specify the list of HTTP headers included when generating the signature for the message. If specified, it should be a lowercased, quoted list of HTTP header fields, separated by a single space character. If not specified, implementations MUST operate as if the field were specified with a single value, the ‘Date’ header, in the list of HTTP headers. Note that the list order is important, and MUST be specified in the order the HTTP header field-value pairs are concatenated together during signing. \nMust include \n- “digest”, \n- “x-request-id”, \n- “psu-id” (if and only if “PSU-ID” is included as a header of the HTTP-Request). \n- “psu-corporate-id” (if and only if “psu-corporate-id” is included as a header of the HTTP-Request). \n- “Date” \n- \"tpp-redirect-uri\"(if and only if \"tpp-redirect-uri\" is included as a header of the HTTP-Request). \nNo other entries may be included.\n- Signature: The ‘signature’ parameter is a base 64 encoded digital signature, as described in RFC 4648 [RFC4648], Section 4. The client uses the ‘algorithm’ and ‘headers’ signature parameters to form a canonicalised ‘signing string’. This ‘signing string’ is then signed with the key associated with ‘keyId’ and the algorithm corresponding to ‘algorithm’. The ‘signature’ parameter is then set to the base 64 encoding of the signature.",
            "name": "signature",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This is a X509 certificate that the TPP uses for signing the request, in base64 encoding. \nThis certificate is in PEM format without the \"-----BEGIN CERTIFICATE-----\" and \"-----END CERTIFICATE-----\".\nMust be contained if a signature is contained, see above.",
            "name": "tpp-signature-certificate",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The date provided by the TPP.  Format: EEE, dd MMM yyyy hh:mm:ss z",
            "name": "date",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The addressed payment product endpoint.\n\nThe value list of products supported is: \n\n- sepa-credit-transfers\n- instant-sepa-credit-transfers\n- target-2-payments\n- cross-border-credit-transfers",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "Resource Identification of the related payment. ",
            "name": "payment-id",
            "required": true,
            "type": "string"
          }
        ],
        "x-auth-type": "Application",
        "x-throttling-tier": "Unlimited",
        "operationId": "getPaymentStatusRequest"
      }
    },
    "/payments/{payment-product}/{payment-id}": {
      "put": {
        "responses": {
          "200": {
            "description": "Service executed successfully",
            "headers": {
              "x-request-id": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "type": "string"
              },
              "aspsp-sca-approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed. Possible values are:\n\n- EMBEDDED\n- DECOUPLED\n- REDIRECT",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/updatePaymentResourceResponseType"
            }
          },
          "400": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"176\">\n<p>PSD2_01.000.A0002</p>\n</td>\n<td colspan=\"2\" width=\"388\">\n<p>Missing header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"176\">\n<p>PSD2_01.000.A0003</p>\n</td>\n<td colspan=\"2\" width=\"388\">\n<p>Invalid header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"176\">\n<p>PSD2_01.000.A0008</p>\n</td>\n<td colspan=\"2\" width=\"388\">\n<p>Custom bean validation error - {field name} {condition violated}</p>\n</td>\n</tr>\n<tr>\n<td width=\"176\">\n<p>PSD2_01.188.A0022</p>\n</td>\n<td colspan=\"2\" width=\"388\">\n<p>Invalid service</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.188.A0025</p>\n</td>\n<td width=\"387\">\n<p>Inconsistent payment resource status</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"387\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr><tr>\n<td width=\"170\">\n<p>PSD2_01.000.A0039</p>\n</td>\n<td width=\"394\">\n<p>Error received from ASPSP system: invalid or missing parameter. Please check the Annex Interface Agreement.</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.188.A0037</p>\n</td>\n<td width=\"394\">\n<p>No SCA methods applicable.</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.188.A0042</p>\n</td>\n<td width=\"394\">\n<p>The payment initiation without debtorAccount isn't currently supported by the ASPSP. Please refer to the End Point Domains document, published on the API portal Technical Documents Section to know when the ASPSP has planned the support of this payment flow</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "401": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"176\">\n<p>PSD2_01.000.A0009</p>\n</td>\n<td colspan=\"2\" width=\"388\">\n<p>Invalid signature</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"387\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "403": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"176\">\n<p>PSD2_01.001.A0004</p>\n</td>\n<td colspan=\"2\" width=\"388\">\n<p>Unknown ASPSP</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.188.A0024</p>\n</td>\n<td width=\"387\">\n<p>Resource expired</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"387\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.185.A0016</p>\n</td>\n<td width=\"387\">\n<p>Product not found for ASPSP.</p>\n</td>\n</tr></tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "404": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"176\">\n<p>PSD2_01.188.A0010</p>\n</td>\n<td colspan=\"2\" width=\"388\">\n<p>Entity not found</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "409": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0001</p>\n</td>\n<td width=\"378\">\n<p>Operation not allowed</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "500": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.000.A0000</p>\n</td>\n<td width=\"378\">\n<p>Generic Error</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "502": {
            "description": "<table width=\"661\">\n<tbody>  <tr>\n<td width=\"147\">\n<p>PSD2_01.000.A0038</p>\n</td>\n<td width=\"375\">\n<p>Invalid response received by the ASPSP system</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr></tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          }
        },
        "description": "This API must be used by the TPP to move forward a single payment-order process flow started through the paymentInitationRequest API.\n\nThe TPP can use this API to manage the following scenarios that may arise due to the execution of a paymentInitiationRequest or of an updatePaymentResource:\n\n\na)\tAuthenticate the PSU to the ASPSP system in case of the ASPSP requires an EMBEDDED authentication for the aspsp-product-code related to the initiated payment order\nb)\tSelect the SCA method to be used to strongly authenticate the PSU in case the ASPSP makes more than one of these methods available for the aspsp-product-code related to the initiated payment order\nc)\tAuthorise the payment booking by providing the ASPSP of the SCA authentication data to complete the strong customer authentication process in case the ASPSP requires an EMBEDDED SCA approach for the aspsp-product-code related to the initiated payment order. \nd)\tAuthorize the payment completion by providing the PSU acceptance of transaction fees in case the payment is SCA exempt.\ne)\tSelect the SCA method to be used to choose the account to be charged for the payment. This scenario happens when the paymentInitiationRequest has been made without debtorAccount and the ASPSP makes more than one SCA method available for the aspsp-product-code related to the initiated payment order. In case the target ASPSP wouldn’t support yet the debtorAccount selection flow, then the error PSD2_01.188.A0042 will be raised.\nf)\tAuthenticate the PSU to the ASPSP system in case the paymentInitiationRequest has been made with no debtorAccount and PSU_ID and the selected SCA method to process the request has a DECOUPLED approach.\n\nThe CBI Globe publishes a dedicated endpoint for each payment-products available also for this API, as well for the paymentInitiationRequest.\n\nThe TPP must provide the certificate, issued by the competent National Authority and qualifying the TPP as a PISP, in order to access to this API.\n\nAmong the mandatory parameters the TPP must provide to use this API, the main ones are:\n-\tpayment-product: to address the dedicated API endpoint\n-\tpayment-id: to identify the payment resource  \n-\toperationName: to identify the usage scenario. In case of scenario d, no other input is required.\n-\tpsuCredentials: to authenticate the PSU to the ASPSP system (scenario a)\n-\tauthenticationMethodId: to select the desired SCA method (scenario b)\n-\tscaAuthenticationData:  to authorize the payment booking (scenario c)",
        "summary": "Processes on PSU identification, PSU authentication and explicit authorisation of transactions by using SCA are very similar in PIS and AIS services.",
        "parameters": [
          {
            "in": "header",
            "description": "This token is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding AIS service in the same session.  Reserved for future use.",
            "name": "psu-authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The ASPSP code",
            "name": "aspsp-code",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The value of the access token",
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Operation to execute. Accepted values are:\n- updatePsuData\n- transactionAuthorisation\n- feeConfirmationPayment \n-selectScaForAccountSelection \n- updatePsuDataForAccountSelection",
            "name": "operation-name",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "UUID of the request, unique to the call, as determined by the initiating party.",
            "name": "x-request-id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Contained if not yet contained in the first request, and mandated by the ASPSP in the related response. Mandatory if “psu-corporate-id” is valorized.\n\n* It must be valorized if selected operation-name is updatePsuData.",
            "name": "psu-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Contained if not yet contained in the first request, and mandated by the ASPSP in the related response.",
            "name": "psu-id-type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Contained if not yet contained in the first request, and mandated by the ASPSP in the related response. This field is relevant only in a corporate context.",
            "name": "psu-corporate-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Contained if not yet contained in the first request, and mandated by the ASPSP documentation. Might be mandated by the ASPSP in addition if the PSU-Corporate-ID is contained.",
            "name": "psu-corporate-id-type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request. \nThe \"Digest\" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512.",
            "name": "digest",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\nThis string contains the following fields separated by commas:\n- keyId: The ‘keyId‘ field is an opaque string that the server can use to look up the component they need to validate the signature. It could be an SSH key fingerprint, a URL to machine-readable key data, an LDAP DN, etc. Management of keys and assignment of ‘keyId‘ is out of scope for this document. \nSerial Number of the TPP's certificate included in the “Certificate” header of this request. \nSerial Number of the TPP's certificate included in the “TPP-Signature-Certificate” header of this request.\nIt shall be formatted as follows: keyId=“SN=XXX,CA=YYYYYYYYYYYYYYYY” where “XXX” is the serial number of the certificate in hexadecimal coding given in the TPP-Signature-Certificate-Header and “YYYYYYYYYYYYYYYY” is the full Distinguished Name of the Certification Authority having produced this certificate.\n- algorithm: The ‘algorithm’ parameter is used to specify the digital signature algorithm to use when generating the signature.\nThe algorithm must identify the same algorithm for the signature as presented in the certificate (Element “TPP-Certificate”) of this Request. \nThe available values are: “rsa-sha256” or “rsa-sha512”\n- Headers: The ‘headers’ parameter is used to specify the list of HTTP headers included when generating the signature for the message. If specified, it should be a lowercased, quoted list of HTTP header fields, separated by a single space character. If not specified, implementations MUST operate as if the field were specified with a single value, the ‘Date’ header, in the list of HTTP headers. Note that the list order is important, and MUST be specified in the order the HTTP header field-value pairs are concatenated together during signing. \nMust include \n- “digest”, \n- “x-request-id”, \n- “psu-id” (if and only if “PSU-ID” is included as a header of the HTTP-Request). \n- “psu-corporate-id” (if and only if “psu-corporate-id” is included as a header of the HTTP-Request). \n- “date” \n- \"tpp-redirect-uri\"(if and only if \"tpp-redirect-uri\" is included as a header of the HTTP-Request). \nNo other entries may be included.\n- Signature: The ‘signature’ parameter is a base 64 encoded digital signature, as described in RFC 4648 [RFC4648], Section 4. The client uses the ‘algorithm’ and ‘headers’ signature parameters to form a canonicalised ‘signing string’. This ‘signing string’ is then signed with the key associated with ‘keyId’ and the algorithm corresponding to ‘algorithm’. The ‘signature’ parameter is then set to the base 64 encoding of the signature.",
            "name": "signature",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This is a X509 certificate that the TPP uses for signing the request, in base64 encoding. \nThis certificate is in PEM format without the \"-----BEGIN CERTIFICATE-----\" and \"-----END CERTIFICATE-----\".\nMust be contained if a signature is contained, see above.",
            "name": "tpp-signature-certificate",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The date provided by the TPP.  Format: EEE, dd MMM yyyy hh:mm:ss z",
            "name": "date",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The addressed payment product endpoint.\n\nThe value list of products supported is: \n\n- sepa-credit-transfers\n- instant-sepa-credit-transfers\n- target-2-payments\n- cross-border-credit-transfers\nOnly in case of an Update Data Request in a Payment Initiation context.",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "Resource Identification of the related payment initiation. ",
            "name": "payment-id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updatePaymentResourceRequestType"
            }
          }
        ],
        "x-auth-type": "Application",
        "x-throttling-tier": "Unlimited",
        "operationId": "updatePaymentResource"
      }
    },
    "/periodic-payments/{payment-product}": {
      "post": {
        "responses": {
          "201": {
            "description": "Resource created successfully",
            "headers": {
              "location": {
                "description": "Location of the created resource (if created)",
                "type": "string"
              },
              "x-request-id": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "type": "string"
              },
              "aspsp-sca-approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed. Possible values are:\n\n- EMBEDDED\n- DECOUPLED\n- REDIRECT\n\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/periodicPaymentInitiationRequestResponseType"
            }
          },
          "400": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0008</p>\n</td>\n<td width=\"378\">\n<p>Custom bean validation error - {field name} {condition violated}</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0002</p>\n</td>\n<td width=\"378\">\n<p>Missing header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0003</p>\n</td>\n<td width=\"378\">\n<p>Invalid header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n</tbody><tr>\n<td width=\"170\">\n<p>PSD2_01.000.A0039</p>\n</td>\n<td width=\"394\">\n<p>Error received from ASPSP system: invalid or missing parameter. Please check the Annex Interface Agreement.</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.188.A0037</p>\n</td>\n<td width=\"394\">\n<p>No SCA methods applicable.</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.188.A0042</p>\n</td>\n<td width=\"394\">\n<p>The payment initiation without debtorAccount isn't currently supported by the ASPSP. Please refer to the End Point Domains document, published on the API portal Technical Documents Section to know when the ASPSP has planned the support of this payment flow</p>\n</td>\n</tr>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "401": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.000.A0009</p>\n</td>\n<td width=\"387\">\n<p>Invalid signature</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"387\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "403": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.001.A0004</p>\n</td>\n<td width=\"378\">\n<p>Unknown ASPSP</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.001.A0020</p>\n</td>\n<td width=\"378\">\n<p>Unknown TPP</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.185.A0016</p>\n</td>\n<td width=\"378\">\n<p>Product not found for ASPSP</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "404": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.185.A0031</p>\n</td>\n<td width=\"378\">\n<p>Product not found</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "500": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.000.A0000</p>\n</td>\n<td width=\"378\">\n<p>Generic Error</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "502": {
            "description": "<table width=\"661\">\n<tbody>  <tr>\n<td width=\"147\">\n<p>PSD2_01.000.A0038</p>\n</td>\n<td width=\"375\">\n<p>Invalid response received by the ASPSP system</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          }
        },
        "description": "This is the first API dedicated to initiate a single payment request. \nA single payment belongs to one of the following payment-products: \n- sepa-credit-transfers\n- instant-sepa-credit-transfers\n- target-2-payments\n- cross-border-credit-transfers \nThe CBI Globe published a dedicated endpoint of this API for each payment-product, therefore all the participant ASPSPs can choose their supported payment-products.\n\nThe TPP must provide the certificate, issued by the competent National Authority and qualifying the TPP as a PISP, in order to access to this API.\nAmong the mandatory parameters the TPP must provide to use this API, the main ones are:\n-\tpayment-product: to address the dedicated API endpoint\n-\taspsp-product-code: an ASPSP can manage different products to differentiate the PSU authentication mode. The available products for a given ASPSP can be retrieved through the retrieveAspsps API.\n-\ttransactionType: used to characterize the payment, to correctly manage the transaction risk analysis phase.\n\nThis API allows to start a payment request also without the debtorAccount (as described here below), but in case the target ASPSP wouldn’t yet support the debtorAccount selection flow the  error PSD2_01.188.A0042 will be raised.\n\nHere below some possible cases:\n-\tIf the TPP doesn’t provide the debtorAccount in the request, then the API creates a payment resource and gives back its identifier asking the TPP/PSU for:\n\t-\tchoose among the available SCA methods, in case there are more than one applicable, to complete the account selection phase\n\t-\ttprovide its credentials to perform the weak authentication. It is the case when the PSU_ID isn’t present in the paymentInitiationRequest and the selected SCA method has a DECOUPLED approach with weak authentication in EMBEDDED way\n\t-\taccess the ASPSP channels to authenticate itself. It is the case when the PSU_ID isn’t present in the paymentInitiationRequest and the selected SCA method has a DECOUPLED approach with weak authentication in REDIRECT way.\n\t-\taccess the ASPSP channels to authenticate itself and perform the selection of the account the payment must be charged on. It is the case when the selected SCA method has a DECOUPLED (and the PSU_ID has been provided in the paymentInitiationRequest) or REDIRECT approach.\n-\tIf the TPP provides the debtorAccount then:\n\t-\tIf the TPP doesn't provide the PSU identifier in the request, then the API creates a payment resource and gives back its identifier, asking the PSU to authenticate himself according to the ASPSP configuration.\n\t-\tIf the TPP provides the PSU identifier, the transaction risk analysis and the SCA exemption evaluation will be executed. Depending on the result of this phase, the API brings the process flow in one of the following status:\n\t\t-\tPayment rejected due to fraud detection;\n\t\t-\tPayment accepted with the needed PSU simple or strong authentication. In this case, the API gives back the payment identifier asking the PSU for authenticate himself according to the ASPSP configuration.",
        "summary": "This API create a standing order initiation resource for recurrent i.e. periodic payments with all data relevant for the corresponding payment product and the execution of the standing order. This is the first step in the API to initiate the related recurring/periodic payment.",
        "parameters": [
          {
            "in": "header",
            "description": "The value of the access token",
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The ASPSP code",
            "name": "aspsp-code",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This token is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding AIS service in the same session.  Reserved for future use.",
            "name": "psu-authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "UUID of the request, unique to the call, as determined by the initiating party.",
            "name": "x-request-id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The ID of the PSU in the ASPSP client interface. Mandatory if \"psu-corporate-id\" is valorized.",
            "name": "psu-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility. Mandatory if \"psu-corporate-id\" is valorized.",
            "name": "psu-id-type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Identification of a Corporate,  only used in a corporate context. ",
            "name": "psu-corporate-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This is describing the type of the identification needed by the ASPSP to identify the PSU-Corporate-ID content.",
            "name": "psu-corporate-id-type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service. This then contains the \"consentId\" of the related AIS consent, which was performed prior to this payment initiation.",
            "name": "consent-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The forwarded Agent header field of the http request between PSU and TPP.",
            "name": "psu-user-agent",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.",
            "name": "psu-ip-address",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.",
            "name": "psu-ip-port",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.",
            "name": "psu-accept",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The charset information sent  by the PSU",
            "name": "psu-accept-charset",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The encoding information sent  by the PSU",
            "name": "psu-accept-encoding",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The language information sent  by the PSU",
            "name": "psu-accept-language",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "HTTP method used at the PSU-TPP interface, if available. Valid values are: \n- GET \n- POST \n- PUT \n- PATCH \n- DELETE",
            "name": "psu-http-method",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation. In case of an installation identification this ID need to be unaltered until removal from device.",
            "name": "psu-device-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\nFormat using [RFC 2426], i.e. GEO:<latitude>,< longitude >.",
            "name": "psu-geo-location",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "PSU malware infection",
            "name": "psu-malware-infection",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "PSU Abnormal use of the access device or software",
            "name": "psu-abnormal-use",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Application name",
            "name": "app-name",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Application version",
            "name": "app-version",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Brand of the device",
            "name": "device-brand",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Model of the mobile device",
            "name": "device-model",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The mobile device name defined by the end user. Note: In Android, this device element is returned based on the name defined in the Bluetooth settings.",
            "name": "device-name",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "International Mobile Equipment Identity",
            "name": "device-imei",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Vendor identification",
            "name": "device-vendor-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "SIM number 1",
            "name": "sim1-number",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "SIM number 2",
            "name": "sim2-number",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The number of bits used to display one color.\nThe possible values are: \n32, 24, 16, or 8",
            "name": "screen-color-depth",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Width of the user's screen \nNote For iOS, the resolution measurement is in points. For other operating systems, the resolution measurement is in pixels.",
            "name": "screen-width",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Height of the user's screen.\nNote For iOS, the resolution measurement is in points. For other operating systems, the resolution measurement is in pixels.",
            "name": "screen-height",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Vertical space of the user's screen.  Note For iOS, the resolution measurement is in points. For other operating systems, the resolution measurement is in pixels.",
            "name": "screen-vertical-space",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The software plug-ins installed in the user's browser.",
            "name": "software-plug-ins",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The user's current time zone, related to UTC (for example UTC+01:00)",
            "name": "time-zone",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The language that the user has set in the browser ",
            "name": "browser-language",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A Boolean value that indicates whether Java is enabled in the browser. Only \"true\" or \"false\" value is accepted.",
            "name": "java-support",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A Boolean value that indicates whether cookies are enabled in the user's browser. Only \"true\" or \"false\" value is accepted.",
            "name": "psu-cookie-support",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The operating system installed. ",
            "name": "device-os",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The operating system version installed",
            "name": "device-os-version",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The major version of the browser.",
            "name": "major-version",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The browser being used. Possible values are: Netscape, Mozilla, Explorer, Camino, Firefox, Konqueror, iCab, Opera, Safari, OmniWeb, Chrome.",
            "name": "browser-type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Different identifiers are retrieved for each of the operating systems: \n-iOS 4.x-6.x àThe Wi-Fi MAC address.\n -iOS 7.x and later à The identifierFor Vendor property of the UIDevice class.\n -Android àThe Internationa l Mobile Equipment Identity (IMEI) for GSM. ",
            "name": "hardware-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A positive value indicates that the device is rooted or jailbroken. Only \"true\" or \"false\" value is accepted.",
            "name": "device-rooted",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A positive value indicates that the client device is an emulator. Only \"true\" or \"false\" value is accepted.",
            "name": "emulator",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The client application creates and saves a random unique identifier, which the client application can read. This enables verification that the application is genuine and not malicious malware. \nNote: For iOS system, the value is permanently stored in the keychain. \nFor Android system the value is stored in the private storage of the application. This value is only stored until the application is uninstalled.",
            "name": "rsa-application-key",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The currently installed RSA Adaptive Authentication Mobile SDK Modules version and build number.",
            "name": "sdk-version",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The language displayed in the mobile device.",
            "name": "languages",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Indicates whether or not the mobile device supports multitasking. Only \"true\" or \"false\" value is accepted.",
            "name": "multitasking-supported",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A GSM Cell ID (CID) is a unique number used to identify each base transceiver station (BTS) or sector of a BTS within a location area code (LAC) or GSM network.  Note This device element is not supported by iOS.  ",
            "name": "cell-tower-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The height of the mobile device above the ellipsoid. This device element is measured in meters.",
            "name": "geolocation-altitude",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The accuracy of the mobile device's altitude. This device element is returned in meters.",
            "name": "geolocation-altitude-accuracy",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The direction of travel of the mobile device. This device element is returned in degrees.",
            "name": "geolocation-heading",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The radius of uncertainty for the geo-location of the mobile device. This device element is measured in meters. A negative value indicates that the geo-location latitude or longitude of the mobile device is invalid.",
            "name": "geolocation-horizontal-accuracy",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The current ground speed of the mobile device. This device element is returned in meters per second.",
            "name": "geolocation-speed",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "There are five possible status codes:\n0=success The geolocation is successfully retrieved. \n1=deny The end user denies location collection. \n2=location status not available. The geolocation position is unavailable. \n3=location status timeout The geolocation is timed out. \n4=location status not supported The geolocation collection is not supported.",
            "name": "geolocation-status",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The time that the geo-location was created. This device element is returned in milliseconds.",
            "name": "geolocation-timestamp",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The local area code. \nNote For Android, this device element is only available for GSM devices and does not support CDMA devices. \nNote This device element is not supported by iOS.",
            "name": "location-area-code",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The Wi-Fi card MAC address.  Note This device element is mandatory for iOS versions 4.x– 6.x.",
            "name": "wifi-mac-address",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The country code of the mobile device.",
            "name": "mcc",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The mobile carrier code.",
            "name": "mnc",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The basic service set identification (BSSID) for each basic service set. ",
            "name": "wifi-networks-data-bssid",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The wireless signal strength in the database management system expressed in decibel/meters .\nFor example -40 dBm.\nNote This device element is not supported by iOS.",
            "name": "wifi-networks-data-signal-strength",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The Service Set Identifier (SSID). (the network name)",
            "name": "wifi-networks-data-ssid",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Define the channel used from PSU in order to send the request to TPP (WEB or APP)  ",
            "name": "channel",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The operating system identification:\n- iOS: Universally Unique Identifier (UUID) (in this case it is length 36 characters)\n- Android: The client application creates a random unique identifier that permanently persists in the keychain (Android_ID) (in this case it is length 16 characters)",
            "name": "os-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Mobile Station International Subscriber Directory Number (MSISDN).",
            "name": "phone-number",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The International Mobile Subscriber Identity (IMSI)",
            "name": "sim-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Only \"true\" or \"false\" values are accepted.\nIf it equals \"true\", the TPP prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU.\nIf the parameter is not used, It will be choosen the SCA approach depending on the SCA method chosen by the TPP/PSU.",
            "name": "tpp-redirect-preferred",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. *This redirect link must be contained, if the tpp-redirect-preferred flag is contained and equals \"true\"",
            "name": "tpp-redirect-uri",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after the authentication of the PSU on the ASPSP system.",
            "name": "tpp-authentication-redirect-uri",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case of a negative result of the redirect SCA method. This might be ignored by the ASPSP.",
            "name": "tpp-nok-redirect-uri",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request. \nThe \"Digest\" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512.",
            "name": "digest",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n\nThis string contains the following fields separated by commas:\n\n- keyId: The ‘keyId‘ field is an opaque string that the server can use to look up the component they need to validate the signature. It could be an SSH key fingerprint, a URL to machine-readable key data, an LDAP DN, etc. Management of keys and assignment of ‘keyId‘ is out of scope for this document. \nSerial Number of the TPP's certificate included in the “Certificate” header of this request. \nSerial Number of the TPP's certificate included in the “TPP-Signature-Certificate” header of this request.\nIt shall be formatted as follows: keyId=“SN=XXX,CA=YYYYYYYYYYYYYYYY” where “XXX” is the serial number of the certificate in hexadecimal coding given in the TPP-Signature-Certificate-Header and “YYYYYYYYYYYYYYYY” is the full Distinguished Name of the Certification Authority having produced this certificate.\n\n- algorithm: The ‘algorithm’ parameter is used to specify the digital signature algorithm to use when generating the signature.\nThe algorithm must identify the same algorithm for the signature as presented in the certificate (Element “TPP-Certificate”) of this Request. \nThe available values are: “rsa-sha256” or “rsa-sha512”\n\n- Headers: The ‘headers’ parameter is used to specify the list of HTTP headers included when generating the signature for the message. If specified, it should be a lowercased, quoted list of HTTP header fields, separated by a single space character. If not specified, implementations MUST operate as if the field were specified with a single value, the ‘Date’ header, in the list of HTTP headers. Note that the list order is important, and MUST be specified in the order the HTTP header field-value pairs are concatenated together during signing. \n\nMust include \n- “digest”, \n- “x-request-id”, \n- “psu-id” (if and only if “PSU-ID” is included as a header of the HTTP-Request). \n- “psu-corporate-id” (if and only if “psu-corporate-id” is included as a header of the HTTP-Request). \n- “Date” \n- \"tpp-redirect-uri\"(if and only if \"tpp-redirect-uri\" is included as a header of the HTTP-Request). \n \n\nNo other entries may be included.\n\n- Signature: The ‘signature’ parameter is a base 64 encoded digital signature, as described in RFC 4648 [RFC4648], Section 4. The client uses the ‘algorithm’ and ‘headers’ signature parameters to form a canonicalised ‘signing string’. This ‘signing string’ is then signed with the key associated with ‘keyId’ and the algorithm corresponding to ‘algorithm’. The ‘signature’ parameter is then set to the base 64 encoding of the signature.",
            "name": "signature",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This is a X509 certificate that the TPP uses for signing the request, in base64 encoding. \nThis certificate is in PEM format without the \"-----BEGIN CERTIFICATE-----\" and \"-----END CERTIFICATE-----\".\nMust be contained if a signature is contained, see above.",
            "name": "tpp-signature-certificate",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "ASPSP product code. It must be a string without spaces and special characters.",
            "name": "aspsp-product-code",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The date provided by the TPP.  Format: EEE, dd MMM yyyy hh:mm:ss z",
            "name": "date",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The addressed payment product endpoint.\n\nThe value list of products supported is: \n\n- sepa-credit-transfers\n- instant-sepa-credit-transfers\n- target-2-payments\n- cross-border-credit-transfers",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/periodicPaymentInitiationRequestRequestType"
            }
          }
        ],
        "x-auth-type": "Application",
        "x-throttling-tier": "Unlimited",
        "operationId": "periodicPaymentInitiationRequest"
      }
    },
    "/periodic-payments/{payment-product}/{payment-id}/status": {
      "get": {
        "responses": {
          "200": {
            "description": "Service executed successfully",
            "headers": {
              "x-request-id": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "type": "string"
              },
              "psu-id": {
                "description": "The PSU identifier.",
                "type": "string"
              },
              "psu-id-type": {
                "description": "The PSU identifier type.",
                "type": "string"
              },
              "psu-corporate-id": {
                "description": "The PSU corporate identifier. This field is relevant only in a corporate context.",
                "type": "string"
              },
              "psu-corporate-id-type": {
                "description": "The PSU corporate identifier. Might be mandated by the ASPSP in addition if the PSU-Corporate-ID is contained.",
                "type": "string"
              },
              "aspsp-sca-approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed. Possible values are:\n\n- EMBEDDED\n- DECOUPLED\n- REDIRECT\n\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/getPeriodicPaymentStatusRequestResponseType"
            }
          },
          "400": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.000.A0002</p>\n</td>\n<td width=\"387\">\n<p>Missing header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.000.A0003</p>\n</td>\n<td width=\"387\">\n<p>Invalid header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.000.A0040</p>\n</td>\n<td width=\"394\">\n<p>Operation not allowed: authentication required</p>\n</td>\n</tr>\n</tbody><tr>\n<td width=\"170\">\n<p>PSD2_01.000.A0039</p>\n</td>\n<td width=\"394\">\n<p>Error received from ASPSP system: invalid or missing parameter. Please check the Annex Interface Agreement.</p>\n</td>\n</tr>\n\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "401": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.000.A0009</p>\n</td>\n<td width=\"387\">\n<p>Invalid signature</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "403": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.001.A0004</p>\n</td>\n<td width=\"387\">\n<p>Unknown ASPSP</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"387\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.185.A0016</p>\n</td>\n<td width=\"387\">\n<p>Product not found for ASPSP</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "404": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.188.A0010</p>\n</td>\n<td width=\"387\">\n<p>Entity not found</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "409": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"177\">\n<p>PSD2_01.000.A0001</p>\n</td>\n<td width=\"387\">\n<p>Operation not allowed</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "500": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"177\">\n<p>PSD2_00.000.A0000</p>\n</td>\n<td width=\"387\">\n<p>Generic Error</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "502": {
            "description": "<table width=\"661\">\n<tbody>  <tr>\n<td width=\"147\">\n<p>PSD2_01.000.A0038</p>\n</td>\n<td width=\"375\">\n<p>Invalid response received by the ASPSP system</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          }
        },
        "description": "The TPP can retrieve from the ASPSP systems the transaction status of a previously initiated periodic payment order, through this API. The API gives back also the SCA status and the PSU Authentication Status of the related payment resource managed by the CBI Globe. \n\nThe CBI Globe publishes a dedicated endpoint for each payment-products available also for this API, as well for the PeriodicaymentInitiationRequest.\n\nThe TPP must provide the certificate, issued by the competent National Authority and qualifying the TPP as a PISP, in order to access to this API.\n\nAmong the mandatory parameters the TPP must provide to use this API, the main ones are:\n-\tpayment-product: to address the dedicated API endpoint\n-\tpayment-id: to identify the payment resource  ",
        "summary": "This API retrieves the status of a periodic payment initiated transaction.",
        "parameters": [
          {
            "in": "header",
            "description": "The value of the access token",
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The ASPSP code",
            "name": "aspsp-code",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This token is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding AIS service in the same session.  Reserved for future use.",
            "name": "psu-authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "UUID of the request, unique to the call, as determined by the initiating party.",
            "name": "x-request-id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request. \nThe \"Digest\" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512.",
            "name": "digest",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\nThis string contains the following fields separated by commas:\n\n- keyId: The ‘keyId‘ field is an opaque string that the server can use to look up the component they need to validate the signature. It could be an SSH key fingerprint, a URL to machine-readable key data, an LDAP DN, etc. Management of keys and assignment of ‘keyId‘ is out of scope for this document. \nSerial Number of the TPP's certificate included in the “Certificate” header of this request. \nSerial Number of the TPP's certificate included in the “TPP-Signature-Certificate” header of this request.\nIt shall be formatted as follows: keyId=“SN=XXX,CA=YYYYYYYYYYYYYYYY” where “XXX” is the serial number of the certificate in hexadecimal coding given in the TPP-Signature-Certificate-Header and “YYYYYYYYYYYYYYYY” is the full Distinguished Name of the Certification Authority having produced this certificate.\n- algorithm: The ‘algorithm’ parameter is used to specify the digital signature algorithm to use when generating the signature.\nThe algorithm must identify the same algorithm for the signature as presented in the certificate (Element “TPP-Certificate”) of this Request. \nThe available values are: “rsa-sha256” or “rsa-sha512”\n- Headers: The ‘headers’ parameter is used to specify the list of HTTP headers included when generating the signature for the message. If specified, it should be a lowercased, quoted list of HTTP header fields, separated by a single space character. If not specified, implementations MUST operate as if the field were specified with a single value, the ‘Date’ header, in the list of HTTP headers. Note that the list order is important, and MUST be specified in the order the HTTP header field-value pairs are concatenated together during signing. \nMust include \n- “digest”, \n- “x-request-id”, \n- “psu-id” (if and only if “PSU-ID” is included as a header of the HTTP-Request). \n- “psu-corporate-id” (if and only if “psu-corporate-id” is included as a header of the HTTP-Request). \n- “Date” \n- \"tpp-redirect-uri\"(if and only if \"tpp-redirect-uri\" is included as a header of the HTTP-Request). \nNo other entries may be included.\n- Signature: The ‘signature’ parameter is a base 64 encoded digital signature, as described in RFC 4648 [RFC4648], Section 4. The client uses the ‘algorithm’ and ‘headers’ signature parameters to form a canonicalised ‘signing string’. This ‘signing string’ is then signed with the key associated with ‘keyId’ and the algorithm corresponding to ‘algorithm’. The ‘signature’ parameter is then set to the base 64 encoding of the signature.",
            "name": "signature",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This is a X509 certificate that the TPP uses for signing the request, in base64 encoding. \nThis certificate is in PEM format without the \"-----BEGIN CERTIFICATE-----\" and \"-----END CERTIFICATE-----\".\nMust be contained if a signature is contained, see above.",
            "name": "tpp-signature-certificate",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The date provided by the TPP.  Format: EEE, dd MMM yyyy hh:mm:ss z",
            "name": "date",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The addressed payment product endpoint.\n\nThe value list of products supported is: \n\n- sepa-credit-transfers\n- instant-sepa-credit-transfers\n- target-2-payments\n- cross-border-credit-transfers",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "Resource Identification of the related payment. ",
            "name": "payment-id",
            "required": true,
            "type": "string"
          }
        ],
        "x-auth-type": "Application",
        "x-throttling-tier": "Unlimited",
        "operationId": "getPeriodicPaymentStatusRequest"
      }
    },
    "/periodic-payments/{payment-product}/{payment-id}": {
      "put": {
        "responses": {
          "200": {
            "description": "Service executed successfully",
            "headers": {
              "x-request-id": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "type": "string"
              },
              "aspsp-sca-approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed. Possible values are:\n\n- EMBEDDED\n- DECOUPLED\n- REDIRECT",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/updatePeriodicPaymentResourceResponseType"
            }
          },
          "400": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0008</p>\n</td>\n<td width=\"378\">\n<p>Custom bean validation error - {field name} {condition violated}</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0002</p>\n</td>\n<td width=\"378\">\n<p>Missing header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0003</p>\n</td>\n<td width=\"378\">\n<p>Invalid header parameter: {field name}</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.188.A0022</p>\n</td>\n<td width=\"378\">\n<p>Invalid service</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.188.A0025</p>\n</td>\n<td width=\"378\">\n<p>Inconsistent payment resource status</p>\n</td>\n</tr><tr>\n<td width=\"170\">\n<p>PSD2_01.000.A0039</p>\n</td>\n<td width=\"394\">\n<p>Error received from ASPSP system: invalid or missing parameter. Please check the Annex Interface Agreement.</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.188.A0037</p>\n</td>\n<td width=\"394\">\n<p>No SCA methods applicable.</p>\n</td>\n</tr>\n<tr>\n<td width=\"170\">\n<p>PSD2_01.188.A0042</p>\n</td>\n<td width=\"394\">\n<p>The payment initiation without debtorAccount isn't currently supported by the ASPSP. Please refer to the End Point Domains document, published on the API portal Technical Documents Section to know when the ASPSP has planned the support of this payment flow</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "401": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.000.A0009</p>\n</td>\n<td width=\"378\">\n<p>Invalid signature</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "403": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.001.A0004</p>\n</td>\n<td width=\"378\">\n<p>Unknown ASPSP</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.188.A0024</p>\n</td>\n<td width=\"378\">\n<p>Resource expired</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages.</p>\n</td>\n</tr>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.185.A0016</p>\n</td>\n<td width=\"378\">\n<p>Product not found for ASPSP.</p>\n</td>\n</tr>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "404": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_01.188.A0010</p>\n</td>\n<td width=\"378\">\n<p>Entity not found</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "409": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"176\">\n<p>PSD2_01.000.A0001</p>\n</td>\n<td width=\"388\">\n<p>Operation not allowed</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "500": {
            "description": "<table width=\"661\">\n<tbody>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.000.A0000</p>\n</td>\n<td width=\"378\">\n<p>Generic Error</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          },
          "502": {
            "description": "<table width=\"661\">\n<tbody><tr>\n<td width=\"147\">\n<p>PSD2_01.000.A0038</p>\n</td>\n<td width=\"375\">\n<p>Invalid response received by the ASPSP system</p>\n</td>\n</tr>\n<tr>\n<td width=\"186\">\n<p>PSD2_00.188.A0005</p>\n</td>\n<td width=\"378\">\n<p>ASPSP provided error. Reference to the TPP-messages</p>\n</td>\n</tr>\n</tbody>\n</table>",
            "schema": {
              "$ref": "#/definitions/errorManagementType1"
            }
          }
        },
        "description": "This API must be used by the TPP to move forward a periodic payment order process flow started through the periodicPaymentInitationRequest API.\n\nThe TPP can use this API to manage the following scenarios that may arise due to the execution of a paymentInitiationRequest or of an updatePaymentResource:\n\na)\tAuthenticate the PSU to the ASPSP system in case of the ASPSP requires an EMBEDDED authentication for the aspsp-product-code related to the initiated payment order\nb)\tSelect the SCA method to be used to strongly authenticate the PSU in case the ASPSP makes more than one of these methods available for the aspsp-product-code related to the initiated payment order\nc)\tAuthorise the payment booking by providing the ASPSP of the SCA authentication data to complete the strong customer authentication process in case the ASPSP requires an EMBEDDED SCA approach for the aspsp-product-code related to the initiated payment order.\nd)\tSelect the SCA method to be used to choose the account to be charged for the payment. This scenario happens when the paymentInitiationRequest has been made without debtorAccount and the ASPSP makes more than one SCA method available for the aspsp-product-code related to the initiated payment order. In case the target ASPSP wouldn’t support yet the debtorAccount selection flow, then the error PSD2_01.188.A0042 will be raised.\ne)\tAuthenticate the PSU to the ASPSP system in case the paymentInitiationRequest has been made with no debtorAccount and PSU_ID and the selected SCA method to process the request has a DECOUPLED approach. \n\nThe CBI Globe publishes a dedicated endpoint for each payment-products available also for this API, as well for the periodicPaymentInitiationRequest.\n\nThe TPP must provide the certificate, issued by the competent National Authority and qualifying the TPP as a PISP, in order to access to this API.\n\nAmong the mandatory parameters the TPP must provide to use this API, the main ones are:\n-\tpayment-product: to address the dedicated API endpoint\n-\tpayment-id: to identify the payment resource  \n-\toperationName: to identify the usage scenario. In case of scenario d, no other input is required.\n-\tpsuCredentials: to authenticate the PSU at ASPSP system (scenario a)\n-\tauthenticationMethodId: to select the desired SCA method (scenario b)\n-\tscaAuthenticationData:  to authorize the payment booking (scenario c)",
        "summary": "Processes on PSU identification, PSU authentication and explicit authorisation of transactions by using SCA are very similar in PIS and AIS services.",
        "parameters": [
          {
            "in": "header",
            "description": "This token is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding AIS service in the same session.  Reserved for future use.",
            "name": "psu-authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The ASPSP code",
            "name": "aspsp-code",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The value of the access token",
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Operation to execute. Accepted values are:\n- updatePsuData\n- transactionAuthorisation\n- feeConfirmationPayment \n-selectScaForAccountSelection \n- updatePsuDataForAccountSelection",
            "name": "operation-name",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "UUID of the request, unique to the call, as determined by the initiating party.",
            "name": "x-request-id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Contained if not yet contained in the first request, and mandated by the ASPSP in the related response. Mandatory if “psu-corporate-id” is valorized.\n\n* It must be valorized if selected operation-name is updatePsuData.",
            "name": "psu-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Contained if not yet contained in the first request, and mandated by the ASPSP in the related response.",
            "name": "psu-id-type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Contained if not yet contained in the first request, and mandated by the ASPSP in the related response. This field is relevant only in a corporate context.",
            "name": "psu-corporate-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Contained if not yet contained in the first request, and mandated by the ASPSP documentation. Might be mandated by the ASPSP in addition if the PSU-Corporate-ID is contained.",
            "name": "psu-corporate-id-type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request. \nThe \"Digest\" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512.",
            "name": "digest",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\nThis string contains the following fields separated by commas:\n- keyId: The ‘keyId‘ field is an opaque string that the server can use to look up the component they need to validate the signature. It could be an SSH key fingerprint, a URL to machine-readable key data, an LDAP DN, etc. Management of keys and assignment of ‘keyId‘ is out of scope for this document. \nSerial Number of the TPP's certificate included in the “Certificate” header of this request. \nSerial Number of the TPP's certificate included in the “TPP-Signature-Certificate” header of this request.\nIt shall be formatted as follows: keyId=“SN=XXX,CA=YYYYYYYYYYYYYYYY” where “XXX” is the serial number of the certificate in hexadecimal coding given in the TPP-Signature-Certificate-Header and “YYYYYYYYYYYYYYYY” is the full Distinguished Name of the Certification Authority having produced this certificate.\n- algorithm: The ‘algorithm’ parameter is used to specify the digital signature algorithm to use when generating the signature.\nThe algorithm must identify the same algorithm for the signature as presented in the certificate (Element “TPP-Certificate”) of this Request. \nThe available values are: “rsa-sha256” or “rsa-sha512”\n- Headers: The ‘headers’ parameter is used to specify the list of HTTP headers included when generating the signature for the message. If specified, it should be a lowercased, quoted list of HTTP header fields, separated by a single space character. If not specified, implementations MUST operate as if the field were specified with a single value, the ‘Date’ header, in the list of HTTP headers. Note that the list order is important, and MUST be specified in the order the HTTP header field-value pairs are concatenated together during signing. \nMust include \n- “digest”, \n- “x-request-id”, \n- “psu-id” (if and only if “PSU-ID” is included as a header of the HTTP-Request). \n- “psu-corporate-id” (if and only if “psu-corporate-id” is included as a header of the HTTP-Request). \n- “date” \n- \"tpp-redirect-uri\"(if and only if \"tpp-redirect-uri\" is included as a header of the HTTP-Request). \nNo other entries may be included.\n- Signature: The ‘signature’ parameter is a base 64 encoded digital signature, as described in RFC 4648 [RFC4648], Section 4. The client uses the ‘algorithm’ and ‘headers’ signature parameters to form a canonicalised ‘signing string’. This ‘signing string’ is then signed with the key associated with ‘keyId’ and the algorithm corresponding to ‘algorithm’. The ‘signature’ parameter is then set to the base 64 encoding of the signature.",
            "name": "signature",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "This is a X509 certificate that the TPP uses for signing the request, in base64 encoding. \nThis certificate is in PEM format without the \"-----BEGIN CERTIFICATE-----\" and \"-----END CERTIFICATE-----\".\nMust be contained if a signature is contained, see above.",
            "name": "tpp-signature-certificate",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "description": "The date provided by the TPP.  Format: EEE, dd MMM yyyy hh:mm:ss z",
            "name": "date",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The addressed payment product endpoint.\n\nThe value list of products supported is: \n\n- sepa-credit-transfers\n- instant-sepa-credit-transfers\n- target-2-payments\n- cross-border-credit-transfers\nOnly in case of an Update Data Request in a Payment Initiation context.",
            "name": "payment-product",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "Resource Identification of the related payment initiation. ",
            "name": "payment-id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updatePeriodicPaymentResourceRequestType"
            }
          }
        ],
        "x-auth-type": "Application",
        "x-throttling-tier": "Unlimited",
        "operationId": "updatePeriodicPaymentResource"
      }
    }
  },
  "host": "localhost",
  "basePath": "/platform/enabler/psd2orchestrator/pis",
  "definitions": {
    "errorManagementType1": {
      "description": "",
      "properties": {
        "errorManagement": {
          "$ref": "#/definitions/errorManagementPaymentinitiationrequestType1"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "tppMessages": {
          "description": "List of messages to the TPP on operational issues.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentInitiationRequestResponseTypeTppmessagesPaymentinitiationrequestType1"
          }
        }
      }
    },
    "paymentInitiationRequestResponseType": {
      "description": "",
      "properties": {
        "errorManagement": {
          "$ref": "#/definitions/errorManagementPaymentinitiationrequestType1"
        },
        "transactionStatus": {
          "description": "The values defined  in the chapter Appendix – Transaction Status might be used.",
          "type": "string"
        },
        "paymentId": {
          "description": "The UUID of the generated payment initiation resource.",
          "type": "string"
        },
        "transactionFees": {
          "$ref": "#/definitions/transactionFeesPaymentinitiationrequestType1"
        },
        "transactionFeeIndicator": {
          "description": "Accepter values: true or false\n\nIf equals \"true\", the transaction will involve specific transaction cost as shown by the ASPSP in their public price list or as agreed between ASPSP and PSU.\n\nIf equals \"false\", the transaction will not involve additional specific transaction costs to the PSU.\n",
          "type": "string"
        },
        "scaMethods": {
          "description": "This data element might be contained, if SCA is required and if the PSU has a choice between different authentication methods. \nIf this data element is contained, then there is also an hyperlink of type \"selectAuthenticationMethods\" contained in the response body.\nThese methods shall be presented towards the PSU for selection by the TPP.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentInitiationRequestResponseTypeScamethodsPaymentinitiationrequestType1"
          }
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethodPaymentinitiationrequestType1"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeDataPaymentinitiationrequestType1"
        },
        "_links": {
          "$ref": "#/definitions/_linksPaymentinitiationrequestType1"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "tppMessages": {
          "description": "List of messages to the TPP on operational issues.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentInitiationRequestResponseTypeTppmessagesPaymentinitiationrequestType1"
          }
        },
        "psuCredentials": {
          "$ref": "#/definitions/paymentInitiationRequestResponseTypePsucredentialsPaymentinitiationrequestType1"
        }
      },
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ]
    },
    "paymentInitiationRequestRequestType": {
      "description": "body",
      "properties": {
        "endToEndIdentification": {
          "description": "The unique key for each payment.",
          "type": "string"
        },
        "debtorAccount": {
          "$ref": "#/definitions/debtorAccountPaymentinitiationrequestType2"
        },
        "ultimateDebtor": {
          "description": "Ultimate party that owes an amount of money to the ultimate creditor. Reserved for future use.",
          "type": "string"
        },
        "mailDebtor": {
          "description": "Email of the debtor",
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountPaymentinitiationrequestType2"
        },
        "creditorAccount": {
          "$ref": "#/definitions/creditorAccountPaymentinitiationrequestType2"
        },
        "creditorAgent": {
          "description": "The BIC associated to the account.",
          "type": "string"
        },
        "creditorName": {
          "description": "The creditor name.",
          "type": "string"
        },
        "creditorAddress": {
          "$ref": "#/definitions/creditorAddressPaymentinitiationrequestType2"
        },
        "ultimateCreditor": {
          "description": "Ultimate party to which an amount of money is due. Reserved for future use.",
          "type": "string"
        },
        "purposeCode": {
          "description": "This code is used for defining the purpose of the payment. Reserved for future use. See Appendix - ISO Related Basic Types.",
          "type": "string"
        },
        "remittanceInformationUnstructured": {
          "description": "The remittance information (free text)",
          "type": "string"
        },
        "remittanceInformationStructured": {
          "$ref": "#/definitions/remittanceInformationStructuredPaymentinitiationrequestType2"
        },
        "requestedExecutionDate": {
          "description": "The requested execution date. Reserved for future use. Format: YYYY-MM-DD",
          "type": "string"
        },
        "requestedExecutionTime": {
          "description": "The requested execution date and time with time zone. Reserved for future use. Format: YYYY-MM-DDTHH:mm:ss.sssZ",
          "type": "string"
        },
        "transactionType": {
          "description": "Represents the payment method used\nPossible values are:\n- unattended_terminal_transaction (e.g. transportation or parking)\n- cless_transaction\n- remote_transaction",
          "type": "string"
        },
        "merchantCategoryCode": {
          "description": "Represents the merchant category code. Is used to classify the Merchant business by the type of goods or services provides. Reserved for future use.",
          "type": "string"
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "transactionType"
      ]
    },
    "debtorAccountPaymentinitiationrequestType2": {
      "description": "The account identification which can be used on payload-level to address specific accounts. \n*Exactly one of these parameters is required.",
      "properties": {
        "iban": {
          "description": "This is an identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution ( IBANIdentifier ISO 20022). According to ISO 13616: Pattern: [A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}",
          "type": "string"
        },
        "bban": {
          "description": "This data elements is used for payment accounts which have no IBAN.",
          "type": "string"
        },
        "pan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI DSS requirements.",
          "type": "string"
        },
        "maskedPan": {
          "description": "Primary Account Number (PAN) of a card in a masked form (some digits are masked by a star)",
          "type": "string"
        },
        "msisdn": {
          "description": "An alias to access a payment account via a registered mobile phone number.",
          "type": "string"
        },
        "currency": {
          "description": "The currency code. Codes following ISO 4217 Alpha 3",
          "type": "string"
        }
      }
    },
    "instructedAmountPaymentinitiationrequestType2": {
      "description": "Transaction amount to be checked within the funds check mechanism.",
      "properties": {
        "currency": {
          "description": "The currency code. Codes following ISO 4217 Alpha 3",
          "type": "string"
        },
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. \nThe decimal separator is a dot. \nExample: Valid representations for EUR with up to two decimals are: \n•\t1056 \n•\t5768.2 \n•\t-1.50\n•\t5877.78",
          "type": "string"
        }
      },
      "required": [
        "currency",
        "amount"
      ]
    },
    "creditorAccountPaymentinitiationrequestType2": {
      "description": "The account identification which can be used on payload-level to address specific accounts.  \n*Exactly one of these parameters is required..\n",
      "properties": {
        "iban": {
          "description": "This is an identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution ( IBANIdentifier ISO 20022). According to ISO 13616: Pattern: [A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}",
          "type": "string"
        },
        "bban": {
          "description": "This data elements is used for payment accounts which have no IBAN.",
          "type": "string"
        },
        "pan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI DSS requirements.",
          "type": "string"
        },
        "maskedPan": {
          "description": "Primary Account Number (PAN) of a card in a masked form (some digits are masked by a star)",
          "type": "string"
        },
        "msisdn": {
          "description": "An alias to access a payment account via a registered mobile phone number.",
          "type": "string"
        },
        "currency": {
          "description": "The currency code. Codes following ISO 4217 Alpha 3",
          "type": "string"
        }
      }
    },
    "creditorAddressPaymentinitiationrequestType2": {
      "description": "The creditor address.",
      "properties": {
        "street": {
          "description": "The street name",
          "type": "string"
        },
        "buildingNumber": {
          "description": "The building number",
          "type": "string"
        },
        "city": {
          "description": "The city",
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code",
          "type": "string"
        },
        "country": {
          "description": "The country. At least 2 characters allowed",
          "type": "string"
        }
      },
      "required": [
        "country"
      ]
    },
    "remittanceInformationStructuredPaymentinitiationrequestType2": {
      "description": "A structured text that contains the remittance information and that depends on the product. Reserved for future use. ",
      "properties": {
        "reference": {
          "description": "The actual reference.",
          "type": "string"
        },
        "referenceType": {
          "description": "The reference type.",
          "type": "string"
        },
        "referenceIssuer": {
          "description": "The reference issuer.",
          "type": "string"
        }
      },
      "required": [
        "reference"
      ]
    },
    "errorManagementPaymentinitiationrequestType1": {
      "description": "Object identifying the error",
      "properties": {
        "errorCode": {
          "description": "Code that identifies error occurred",
          "type": "string"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        }
      }
    },
    "transactionFeesPaymentinitiationrequestType1": {
      "description": "Can be used by the ASPSP to transport transaction fees relevant for the underlying payments.",
      "properties": {
        "currency": {
          "description": "The currency code. Codes following ISO 4217 Alpha 3",
          "type": "string"
        },
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. \nThe decimal separator is a dot. \nExample: Valid representations for EUR with up to two decimals are: \n•\t1056 \n•\t5768.2 \n•\t-1.50\n•\t5877.78",
          "type": "string"
        }
      },
      "required": [
        "currency",
        "amount"
      ]
    },
    "paymentInitiationRequestResponseTypeScamethodsPaymentinitiationrequestType1": {
      "description": "This data element might be contained, if SCA is required and if the PSU has a choice between different authentication methods. \nIf this data element is contained, then there is also an hyperlink of type \"selectAuthenticationMethods\" contained in the response body.\nThese methods shall be presented towards the PSU for selection by the TPP.",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\no\tSMS_OTP\no\tCHIP_OTP\no\tPHOTO_OTP\no\tPUSH_OTP\n\nSee Appendix -  AuthenticationType.",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method.",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "chosenScaMethodPaymentinitiationrequestType1": {
      "description": "This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach, if the PSU is already identified.",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\no\tSMS_OTP\no\tCHIP_OTP\no\tPHOTO_OTP\no\tPUSH_OTP\n\nSee Appendix -  AuthenticationType.",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method.",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "challengeDataPaymentinitiationrequestType1": {
      "description": "It is contained in addition to the data element chosenScaMethod if challenge data is needed for SCA. In rare cases this attribute is also used in the context of the psuAuthentication link.",
      "properties": {
        "image": {
          "description": "PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64 encoding , cp. [RFC 4648]. This attribute is used only, when PHOTO_OTP or CHIP_OTP is the selected SCA method ",
          "type": "string"
        },
        "data": {
          "description": "String challenge data ",
          "type": "string"
        },
        "imageLink": {
          "description": "A link where the ASPSP will provides the challenge image for the TPP. ",
          "type": "string"
        },
        "otpMaxLength": {
          "description": "The maximal length for the OTP to be typed in by the PSU. ",
          "type": "integer",
          "format": "int32"
        },
        "otpFormat": {
          "description": "The format type of the OTP to be typed in. \n\nThe admitted values are:\n-          characters\n-          integer.\n",
          "type": "string"
        },
        "additionalInformation": {
          "description": "Additional explanation for the PSU to explain e.g. fallback mechanism for the chosen SCA method. The TPP is obliged to show this to the PSU. ",
          "type": "string"
        }
      }
    },
    "_linksPaymentinitiationrequestType1": {
      "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.\nType of links admitted in this response:\n\n“updatePsuAuthenication”: The link to the payment initiation resource, which needs to be updated by a PSU password and eventually the PSU identification if not delivered yet. This is used in case of the Embedded or Decoupled SCA approach.\n“selectAuthenticationMethod”: This is a link to a resource, where the TPP can select the applicable strong customer authentication methods for the PSU, if there were several available authentication methods. This link contained under exactly the same conditions as the data element “authenticationMethods”.\n“self” : The link to the payment initiation resource created by this request. This link can be used to retrieve the resource data.\n“status”: The link to retrieve the transaction status of the payment initiation.\n“scaRedirect”: In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser.\n“oAuth”: In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.",
      "properties": {
        "scaOauth": {
          "$ref": "#/definitions/scaOauthLinkType"
        },
        "scaRedirect": {
          "$ref": "#/definitions/scaRedirectLinkType"
        },
        "updatePsuAuthenticationRedirect": {
          "$ref": "#/definitions/updatePsuAuthenticationRedirectLinkType"
        },
        "updatePsuAuthentication": {
          "$ref": "#/definitions/updatePsuAuthenticationLinkType"
        },
        "selectAuthenticationMethod": {
          "$ref": "#/definitions/selectAuthenticationMethodLinkType"
        },
        "self": {
          "$ref": "#/definitions/selfPaymentinitiationrequestType2"
        },
        "status": {
          "$ref": "#/definitions/statusPaymentinitiationrequestType2"
        }
      }
    },
    "scaOauthLinkType": {
      "description": "The link refers to a JSON document specifying the OAuth details of the ASPSP’s authorisation server. JSON document follows the definition given in https://tools.ietf.org/html/draft-ietf-oauth-discovery. This link can be used to perform the SCA  to authorize the payment or to select the account where the payment must be charged to. In this latter case the transactionStatus will be  DAS_I.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "scaRedirectLinkType": {
      "description": "A link to an ASPSP site where the PSU strong authentication is performed within the Redirect authentication approach. The authentication redirect URI will be provided to the TPP encoded according to the URL encoding process that consists in encoding only the single query parameters after “?”. This link can be used to perform the SCA  to authorize the payment or to select the account where the payment must be charged to. In this latter case the transactionStatus will be  DAS_I.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "updatePsuAuthenticationRedirectLinkType": {
      "description": "A link to an ASPSP site where the PSU authentication is performed within the Redirect authentication approach. The authentication redirect URI will be provided to the TPP encoded according to the URL encoding process that consists in encoding only the single query parameters after “?”. This link can be used in the following scenarios: \n-\tthe debtorAccount and PSU_ID aren’t provided and the selected SCA has a DECOUPLED approach with  weak authentication REDIRECT \n-\tthe PSU_ID isn’t provided and the weak authentication must be performed as REDIRECT\n-\tthe PSU_ID is provided, the payment can be processed without SCA and the weak authentication must be performed as REDIRECT",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "updatePsuAuthenticationLinkType": {
      "description": "The link to the payment initiation or account information resource, which needs to be updated by a PSU password and eventually the PSU identification if not delivered yet.This link can be used in the following scenarios: \n-\tthe debtorAccount and PSU_ID aren’t provided and the selected SCA has a DECOUPLED approach with weak authentication EMBEDDED. \n-\tthe PSU_ID isn’t provided, and the weak authentication must be performed as EMBEDDED\n-\t the PSU_ID is provided, the payment can be processed without SCA and the weak authentication must be performed as EMBEDDED",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "selectAuthenticationMethodLinkType": {
      "description": "This is a link to a resource, where the TPP can select the applicable second factor authentication methods for the PSU, if there were several available authentication methods.This link can be used in the following scenarios:\n-\tthe debtorAccount isn’t provided and there are more than one applicable SCA method\n-\tthe PSU_ID and debtorAccount are provided,and there are more than one applicable SCA method",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "selfPaymentinitiationrequestType2": {
      "description": "The link to the payment initiation resource created by the request itself.\nThis link can be used later to retrieve the transaction status of the payment initiation.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "statusPaymentinitiationrequestType2": {
      "description": "Status of the resource.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "paymentInitiationRequestResponseTypeTppmessagesPaymentinitiationrequestType1": {
      "description": "List of messages to the TPP on operational issues.",
      "properties": {
        "category": {
          "description": "Only \"ERROR\" or \"WARNING\" permitted",
          "type": "string"
        },
        "code": {
          "description": "The code of the error. Refers to the list of possible error code (Message code)",
          "type": "string"
        },
        "path": {
          "description": "The path of the element of the request message which provoked this error message",
          "type": "string"
        },
        "text": {
          "description": "Additional explaining text (max 512 characters)",
          "type": "string"
        }
      },
      "required": [
        "category",
        "code"
      ]
    },
    "paymentInitiationRequestResponseTypePsucredentialsPaymentinitiationrequestType1": {
      "description": "PSU Credentials on the Bank system",
      "properties": {
        "aspspProductCode": {
          "description": "Product Identification. Used to contextualize the credentials provided by the PSU for those ASPSP that need of it.",
          "type": "string"
        },
        "credentialsDetails": {
          "description": "Credentials Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentInitiationRequestResponseTypePsucredentialsPaymentinitiationrequestType1CredentialsdetailsPaymentinitiationrequestType2"
          }
        }
      },
      "required": [
        "aspspProductCode"
      ]
    },
    "paymentInitiationRequestResponseTypePsucredentialsPaymentinitiationrequestType1CredentialsdetailsPaymentinitiationrequestType2": {
      "description": "Credentials Details",
      "properties": {
        "credentialDetailId": {
          "description": "Credential Detail  Identification",
          "type": "string"
        },
        "isSecret": {
          "description": "If true, it indicates that the field is a password so it should be secreted.",
          "type": "string"
        },
        "labelList": {
          "description": "The list of the labels to show to the end user. They are internationalized.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentInitiationRequestResponseTypePsucredentialsPaymentinitiationrequestType1CredentialsdetailsPaymentinitiationrequestType2LabellistPaymentinitiationrequestType3"
          }
        }
      },
      "required": [
        "credentialDetailId",
        "isSecret",
        "labelList"
      ]
    },
    "paymentInitiationRequestResponseTypePsucredentialsPaymentinitiationrequestType1CredentialsdetailsPaymentinitiationrequestType2LabellistPaymentinitiationrequestType3": {
      "description": "The list of the labels to show to the end user. They are internationalized.",
      "properties": {
        "label": {
          "description": "The label associated to the credentials to show to the end user.",
          "type": "string"
        },
        "language": {
          "description": "Label internationalization. It specifies the language of the label.",
          "type": "string"
        }
      },
      "required": [
        "label",
        "language"
      ]
    },
    "getPaymentStatusRequestResponseType": {
      "description": "",
      "properties": {
        "errorManagement": {
          "$ref": "#/definitions/errorManagementGetpaymentstatusrequestType1"
        },
        "transactionStatus": {
          "description": "The values defined  in the chapter Appendix – Transaction Status might be used.",
          "type": "string"
        },
        "scaStatus": {
          "description": "This data element is containing information about the status of the SCA method applied. This is free text but might be coded in a future version of the specification. ",
          "type": "string"
        },
        "psuAuthenticationStatus": {
          "description": "This data element is containing information about the status of the authentication of the PSU.\nAllowed values:\n- IDENTIFICATION_REQUIRED (The authentication is required in order to identify the PSU and to retrieve the PSU-ID. Typically this state occurs when the TPP doesn’t send the PSU-ID as input parameter into the paymentInitiation Request) \n- AUTHENTICATION_REQUIRED (The psu authentication is requested in order to proceed the execution of the payment request)\n- AUTHENTICATED (PSU successfully authenticated)\n- AUTHENTICATION_FAILED (PSU authentication failed)",
          "type": "string"
        },
        "transactionFees": {
          "$ref": "#/definitions/transactionFeesPaymentinitiationrequestType1"
        },
        "transactionFeeIndicator": {
          "description": "Accepter values: true or false\n\nIf equals \"true\", the transaction will involve specific transaction cost as shown by the ASPSP in their public price list or as agreed between ASPSP and PSU.\n\nIf equals \"false\", the transaction will not involve additional specific transaction costs to the PSU.\n",
          "type": "string"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeDataUpdatepaymentresourceType1"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethodGetpaymentstatusrequestType1"
        },
        "scaMethods": {
          "description": "Might be contained, if several authentication methods are available. (name, type).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getPaymentStatusRequestResponseTypeScamethodsGetpaymentstatusrequestType1"
          }
        },
        "_links": {
          "$ref": "#/definitions/_linksGetpaymentstatusrequestType1"
        },
        "psuMessage": {
          "description": "Message to the PSU",
          "type": "string"
        },
        "tppMessages": {
          "description": "List of messages to the TPP on operational issues.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getPaymentStatusRequestResponseTypeTppmessagesGetpaymentstatusrequestType1"
          }
        }
      },
      "required": [
        "transactionStatus"
      ]
    },
    "errorManagementGetpaymentstatusrequestType1": {
      "description": "Object identifying the error",
      "properties": {
        "errorCode": {
          "description": "Code that identifies error occurred",
          "type": "string"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        }
      }
    },
    "chosenScaMethodGetpaymentstatusrequestType1": {
      "description": "This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach, if the PSU is already identified.",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\n- SMS_OTP\n- CHIP_OTP\n- PHOTO_OTP\n- PUSH_OTP\n\nSee Appendix -  AuthenticationType.",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the “authenticationType”. This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selectionu",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like “SMS OTP on phone +49160 xxxxx 28”.\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.\n",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId",
        "name"
      ]
    },
    "getPaymentStatusRequestResponseTypeScamethodsGetpaymentstatusrequestType1": {
      "description": "Might be contained, if several authentication methods are available. (name, type).",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\n- SMS_OTP\n- CHIP_OTP\n- PHOTO_OTP\n- PUSH_OTP\n\nSee Appendix -  AuthenticationType.",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the “authenticationType”. This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selectionu",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like “SMS OTP on phone +49160 xxxxx 28”.\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.\n",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "_linksGetpaymentstatusrequestType1": {
      "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.\nType of links admitted in this response:\n\n“scaRedirect”: In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser.\n\n“selectAuthenticationMethod”: This is a link to a resource, where the TPP can select the applicable strong customer authentication methods for the PSU, if there were several available authentication methods. This link contained under exactly the same conditions as the data element “authenticationMethods”.\n\n“self” : The link to the payment initiation resource created by this request. This link can be used to retrieve the resource data.\n\n“authoriseTransaction” : The link to the payment initiation resource, where the “Payment Authorisation Request” is sent to. This is the link to the resource which will authorise the payment by checking the SCA authentication data within the Embedded SCA approach.\n\n“feePaymentConfirmation”: The link that the TPP has to follow in order to restart the payment flow after that the PSU has confirmed the payment.\n\n“scaOAuth”: In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.\n",
      "properties": {
        "scaRedirect": {
          "$ref": "#/definitions/scaRedirectLinkType"
        },
        "scaOAuth": {
          "$ref": "#/definitions/scaOauthLinkType"
        },
        "selectAuthenticationMethod": {
          "$ref": "#/definitions/selectAuthenticationMethodLinkType"
        },
        "authoriseTransaction": {
          "$ref": "#/definitions/authoriseTransactionGetpaymentstatusrequestType2"
        },
        "feePaymentConfirmation": {
          "$ref": "#/definitions/feePaymentConfirmationGetpaymentstatusrequestType2"
        }
      }
    },
    "authoriseTransactionGetpaymentstatusrequestType2": {
      "description": "The link to the payment initiation or consent resource, where the “Transaction Authorisation”Request” is sent to. This is the link to the resource which will authorise the payment or the consent by checking the SCA authentication data within the Embedded SCA approach.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "feePaymentConfirmationGetpaymentstatusrequestType2": {
      "description": "The link of the API for fee payment confirmation",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "getPaymentStatusRequestResponseTypeTppmessagesGetpaymentstatusrequestType1": {
      "description": "List of messages to the TPP on operational issues.",
      "properties": {
        "category": {
          "description": "Only \"ERROR\" or \"WARNING\" permitted",
          "type": "string"
        },
        "code": {
          "description": "The code of the error. Refers to the list of possible error code ",
          "type": "string"
        },
        "path": {
          "description": "The path of the element of the request message which provoked this error message",
          "type": "string"
        },
        "text": {
          "description": "Additional explaining text (max 512 characters)",
          "type": "string"
        }
      },
      "required": [
        "category",
        "code"
      ]
    },
    "updatePaymentResourceResponseType": {
      "description": "",
      "properties": {
        "errorManagement": {
          "$ref": "#/definitions/errorManagementUpdatepaymentresourceType1"
        },
        "psuId": {
          "description": "The PSU identifier.",
          "type": "string"
        },
        "psuIdType": {
          "description": "The PSU identifier type.",
          "type": "string"
        },
        "psuCorporateId": {
          "description": "The PSU corporate identifier. This field is relevant only in a corporate context.",
          "type": "string"
        },
        "psuCorporateIdType": {
          "description": "The PSU corporate identifier. Might be mandated by the ASPSP in addition if the PSU-Corporate-ID is contained.",
          "type": "string"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethodUpdatepaymentresourceType1"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeDataUpdatepaymentresourceType1"
        },
        "scaMethods": {
          "description": "This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach, if the PSU is already identified.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/updatePaymentResourceResponseTypeScamethodUpdatepaymentresourceType1"
          }
        },
        "_links": {
          "$ref": "#/definitions/_linksUpdatepaymentresourceType1"
        },
        "transactionStatus": {
          "description": "The values defined  in the chapter Appendix – Transaction Status might be used.",
          "type": "string"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU, e.g. in a Decoupled SCA Approach.",
          "type": "string"
        },
        "tppMessages": {
          "description": "List of messages to the TPP on operational issues.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/updatePaymentResourceResponseTypeTppmessagesUpdatepaymentresourceType1"
          }
        },
        "psuCredentials": {
          "$ref": "#/definitions/psuCredentialsUpdatepaymentresourceType1"
        },
        "transactionFees": {
          "$ref": "#/definitions/transactionFeesUpdatepaymentresourceType1"
        },
        "transactionFeeIndicator": {
          "description": "Accepter values: true or false",
          "type": "string"
        }
      },
      "required": [
        "_links",
        "transactionStatus"
      ]
    },
    "updatePaymentResourceRequestType": {
      "description": "body",
      "properties": {
        "psuCredentials": {
          "$ref": "#/definitions/psuCredentialsUpdatepaymentresourceType2"
        },
        "authenticationMethodId": {
          "description": "The authentication method ID as provided by the ASPSP.\n\n**Mandatory if the header param operation-name is one of \"updatePsuData\" or \"selectScaForAccountSelection\" and the request is an Update psu data for select authentication.\nIf this field is filled the psuCredentials must be empty.\n",
          "type": "string"
        },
        "scaAuthenticationData": {
          "description": "SCA authentication data, depending on the chosen authentication method. If the data is binary, then it is base64 encoded.\n\n*** Mandatory if selected operation-name is transactionAuthorisation.\n",
          "type": "string"
        }
      }
    },
    "psuCredentialsUpdatepaymentresourceType2": {
      "description": "PSU Credentials on the Bank system  \n*Mandatory if the header param operation-name is one of \"updatePsuData\" or \"updatePsuDataForAccountSelection\" and the request is an “Update psu data for authentication”.\nIf this field is filled the authenticationMethodId must be empty.\n",
      "properties": {
        "productCode": {
          "description": "Product Identification. Used to contextualize the credentials provided by the PSU for those ASPSP that need of it.",
          "type": "string"
        },
        "credentialsDetails": {
          "description": "Credentials Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/psuCredentialsUpdatepaymentresourceType2CredentialsdetailsUpdatepaymentresourceType3"
          }
        }
      },
      "required": [
        "productCode",
        "credentialsDetails"
      ]
    },
    "psuCredentialsUpdatepaymentresourceType2CredentialsdetailsUpdatepaymentresourceType3": {
      "description": "Credentials Details",
      "properties": {
        "credentialDetailId": {
          "description": "Credential Detail  Identification",
          "type": "string"
        },
        "credentialValue": {
          "description": "Credential Value",
          "type": "string"
        }
      },
      "required": [
        "credentialDetailId",
        "credentialValue"
      ]
    },
    "errorManagementUpdatepaymentresourceType1": {
      "description": "Object identifying the error",
      "properties": {
        "errorCode": {
          "description": "Code that identifies error occurred",
          "type": "string"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        }
      }
    },
    "chosenScaMethodUpdatepaymentresourceType1": {
      "description": "This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach, if the PSU is already identified.",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\n- SMS_OTP\n- CHIP_OTP\n- PHOTO_OTP\n- PUSH_OTP\n\nSee Appendix -  AuthenticationType.",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method.",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "challengeDataUpdatepaymentresourceType1": {
      "description": "It is contained in addition to the data element chosenScaMethod if challenge data is needed for SCA. In rare cases this attribute is also used in the context of the psuAuthentication link.",
      "properties": {
        "image": {
          "description": "PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64 encoding , cp. [RFC 4648]. This attribute is used only, when PHOTO_OTP or CHIP_OTP is the selected SCA method ",
          "type": "string"
        },
        "data": {
          "description": "String challenge data ",
          "type": "string"
        },
        "imageLink": {
          "description": "A link where the ASPSP will provides the challenge image for the TPP. ",
          "type": "string"
        },
        "otpMaxLength": {
          "description": "The maximal length for the OTP to be typed in by the PSU. ",
          "type": "integer",
          "format": "int32"
        },
        "otpFormat": {
          "description": "The format type of the OTP to be typed in. \n\nThe admitted values are:\n-          characters\n-          integer.\n",
          "type": "string"
        },
        "additionalInformation": {
          "description": "Additional explanation for the PSU to explain e.g. fallback mechanism for the chosen SCA method. The TPP is obliged to show this to the PSU. ",
          "type": "string"
        }
      }
    },
    "updatePaymentResourceResponseTypeScamethodUpdatepaymentresourceType1": {
      "description": "This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach, if the PSU is already identified.",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\n- SMS_OTP\n- CHIP_OTP\n- PHOTO_OTP\n- PUSH_OTP\n\nSee Appendix -  AuthenticationType.\n",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method.",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "_linksUpdatepaymentresourceType1": {
      "description": "A list of hyperlinks to be recognised by the TPP.\nType of links admitted in this response (which might be extended by single ASPSPs as indicated in its XS2A documentation):\n\"scaRedirect\": In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser.\n\"scaOAuth\": In case of an OAuth2 based Redirect Approach, the ASPSP is transmitting the link where the configuration of the OAuth2 Server is defined.\n\"updatePsuAuthentication\": The link to the account information resource, which needs to be updated by a PSU password and eventually the PSU identification if not delivered yet. This is used in a case of the Embedded SCA approach.\n\"selectAuthenticationMethod\": This is a link to a resource, where the TPP can select the applicable SCA for the PSU, if there were several available authentication methods. This link is only contained under exactly the same conditions as the data element \"scaMethods\", see above.,.\n“self”: The link to the resource itself.\n\"status\": The link to retrieve the transaction status of the account information consent.",
      "properties": {
        "scaRedirect": {
          "$ref": "#/definitions/scaRedirectLinkType"
        },
        "scaOAuth": {
          "$ref": "#/definitions/scaOauthLinkType"
        },
        "updatePsuAuthentication": {
          "$ref": "#/definitions/updatePsuAuthenticationLinkType"
        },
        "selectAuthenticationMethod": {
          "$ref": "#/definitions/selectAuthenticationMethodLinkType"
        },
        "authoriseTransaction": {
          "$ref": "#/definitions/authoriseTransactionUpdatepaymentresourceType2"
        },
        "self": {
          "$ref": "#/definitions/selfUpdatepaymentresourceType2"
        },
        "status": {
          "$ref": "#/definitions/statusUpdatepaymentresourceType2"
        },
        "feePaymentConfirmation": {
          "$ref": "#/definitions/feePaymentConfirmationUpdatepaymentresourceType2"
        }
      }
    },
    "authoriseTransactionUpdatepaymentresourceType2": {
      "description": "The link to the payment initiation or consent resource, where the \"Transaction Authorisation\"Request\" is sent to. This is the link to the resource which will authorise the payment or the consent by checking the SCA authentication data within the Embedded SCA approach.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "selfUpdatepaymentresourceType2": {
      "description": "The link to the payment initiation resource created by the request itself.\nThis link can be used later to retrieve the transaction status of the payment initiation.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "statusUpdatepaymentresourceType2": {
      "description": "Status of the resource.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "feePaymentConfirmationUpdatepaymentresourceType2": {
      "description": "The link of the API for fee payment confirmation",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "updatePaymentResourceResponseTypeTppmessagesUpdatepaymentresourceType1": {
      "description": "List of messages to the TPP on operational issues.",
      "properties": {
        "category": {
          "description": "Only \"ERROR\" or \"WARNING\" permitted",
          "type": "string"
        },
        "code": {
          "description": "The code of the error. Refers to the list of possible error code (Message code)",
          "type": "string"
        },
        "path": {
          "description": "The path of the element of the request message which provoked this error message",
          "type": "string"
        },
        "text": {
          "description": "Additional explaining text (max 512 characters)",
          "type": "string"
        }
      },
      "required": [
        "category",
        "code"
      ]
    },
    "psuCredentialsUpdatepaymentresourceType1": {
      "description": "PSU Credentials on the Bank system",
      "properties": {
        "aspspProductCode": {
          "description": "Product Identification. Used to contextualize the credentials provided by the PSU for those ASPSP that need of it.",
          "type": "string"
        },
        "credentialsDetails": {
          "description": "Credentials Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/psuCredentialsUpdatepaymentresourceType1CredentialsdetailsUpdatepaymentresourceType2"
          }
        }
      },
      "required": [
        "aspspProductCode"
      ]
    },
    "psuCredentialsUpdatepaymentresourceType1CredentialsdetailsUpdatepaymentresourceType2": {
      "description": "Credentials Details",
      "properties": {
        "credentialDetailId": {
          "description": "Credential Detail  Identification",
          "type": "string"
        },
        "isSecret": {
          "description": "If true, it indicates that the field is a password so it should be secreted.",
          "type": "string"
        },
        "labelList": {
          "description": "The list of the labels to show to the end user. They are internationalized.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/psuCredentialsUpdatepaymentresourceType1CredentialsdetailsUpdatepaymentresourceType2LabellistUpdatepaymentresourceType3"
          }
        }
      },
      "required": [
        "credentialDetailId",
        "isSecret",
        "labelList"
      ]
    },
    "psuCredentialsUpdatepaymentresourceType1CredentialsdetailsUpdatepaymentresourceType2LabellistUpdatepaymentresourceType3": {
      "description": "The list of the labels to show to the end user. They are internationalized.",
      "properties": {
        "label": {
          "description": "The label associated to the credentials to show to the end user.",
          "type": "string"
        },
        "language": {
          "description": "Label internationalization. It specifies the language of the label.",
          "type": "string"
        }
      },
      "required": [
        "label",
        "language"
      ]
    },
    "transactionFeesUpdatepaymentresourceType1": {
      "description": "Can be used by the ASPSP to transport transaction fees relevant for the underlying payments.",
      "properties": {
        "currency": {
          "description": "The currency code. Codes following ISO 4217 Alpha 3",
          "type": "string"
        },
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. \nThe decimal separator is a dot. \nExample: Valid representations for EUR with up to two decimals are: \n•\t1056 \n•\t5768.2 \n•\t-1.50\n•\t5877.78",
          "type": "string"
        }
      },
      "required": [
        "currency",
        "amount"
      ]
    },
    "errorManagementType2": {
      "description": "",
      "properties": {
        "errorManagement": {
          "$ref": "#/definitions/errorManagementGetpaymentrequestType1"
        },
        "tppMessages": {
          "description": "List of messages to the TPP on operational issues.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getPaymentRequestResponseTypeTppmessagesGetpaymentrequestType1"
          }
        }
      }
    },
    "getPaymentRequestResponseType": {
      "description": "",
      "properties": {
        "errorManagement": {
          "$ref": "#/definitions/errorManagementGetpaymentrequestType1"
        },
        "paymentId": {
          "description": "The UUID of the generated payment initiation resource.",
          "type": "string"
        },
        "endToEndIdentification": {
          "description": "The unique key for each payment.",
          "type": "string"
        },
        "debtorAccount": {
          "$ref": "#/definitions/debtorAccountGetpaymentrequestType1"
        },
        "ultimateDebtor": {
          "description": "Ultimate party that owes an amount of money to the ultimate creditor. Reserved for future use.",
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountGetpaymentrequestType1"
        },
        "creditorAccount": {
          "$ref": "#/definitions/creditorAccountGetpaymentrequestType1"
        },
        "creditorAgent": {
          "description": "The BIC associated to the account.",
          "type": "string"
        },
        "creditorName": {
          "description": "The creditor name.",
          "type": "string"
        },
        "creditorAddress": {
          "$ref": "#/definitions/creditorAddressGetpaymentrequestType1"
        },
        "ultimateCreditor": {
          "description": "Ultimate party to which an amount of money is due. Reserved for future use.",
          "type": "string"
        },
        "purposeCode": {
          "description": "This code is used for defining the purpose of the payment. Reserved for future use. See Appendix - ISO Related Basic Types.",
          "type": "string"
        },
        "remittanceInformationUnstructured": {
          "description": "The remittance information (free text)",
          "type": "string"
        },
        "remittanceInformationStructured": {
          "$ref": "#/definitions/remittanceInformationStructuredGetpaymentrequestType1"
        },
        "requestedExecutionDate": {
          "description": "The requested execution date. Reserved for future use. Format: yyyy-MM-dd",
          "type": "string"
        },
        "requestedExecutionTime": {
          "description": "The requested execution date and time with time zone. Reserved for future use. Format: YYYY-MM-DDTHH:mm:ss.sssZ",
          "type": "string"
        },
        "transactionStatus": {
          "description": "The values defined  in the chapter Appendix – Transaction Status might be used.",
          "type": "string"
        },
        "aspspDigest": {
          "description": "The field is hash concatenation of the parameters which represents the payment. It could include the following parameters (to be defined with banks) \n\n• paymentId\n•  paymentTransactionStatus\n•  Date\n\nAll fields are separated by pipe.\neg: SHA512(paymentId|paymentTransactionStatus|Date)",
          "type": "string"
        },
        "aspspSignature": {
          "description": "The signature of the HASH by the ASPSP through its own encryption key.",
          "type": "string"
        },
        "aspspSignatureCertificate": {
          "description": "The APSPS certificate used to verify the signature.",
          "type": "string"
        },
        "tppMessages": {
          "description": "List of messages to the TPP on operational issues.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getPaymentRequestResponseTypeTppmessagesGetpaymentrequestType1"
          }
        }
      },
      "required": [
        "paymentId",
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "transactionStatus"
      ]
    },
    "errorManagementGetpaymentrequestType1": {
      "description": "Object identifying the error",
      "properties": {
        "errorCode": {
          "description": "Code that identifies error occurred",
          "type": "string"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        }
      }
    },
    "debtorAccountGetpaymentrequestType1": {
      "description": "The account identification which can be used on payload-level to address specific accounts. \n*Exactly one of these parameters is required.",
      "properties": {
        "iban": {
          "description": "This is an identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution ( IBANIdentifier ISO 20022). According to ISO 13616: Pattern: [A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}",
          "type": "string"
        },
        "bban": {
          "description": "This data elements is used for payment accounts which have no IBAN.",
          "type": "string"
        },
        "pan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI DSS requirements.",
          "type": "string"
        },
        "maskedPan": {
          "description": "Primary Account Number (PAN) of a card in a masked form (some digits are masked by a star)",
          "type": "string"
        },
        "msisdn": {
          "description": "An alias to access a payment account via a registered mobile phone number.",
          "type": "string"
        },
        "currency": {
          "description": "Currency Code(ISO 4217 Alpha 3)",
          "type": "string"
        }
      }
    },
    "instructedAmountGetpaymentrequestType1": {
      "description": "Transaction amount to be checked within the funds check mechanism.",
      "properties": {
        "currency": {
          "description": "The currency code. Codes following ISO 4217 Alpha 3",
          "type": "string"
        },
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. \nThe decimal separator is a dot. \nExample: Valid representations for EUR with up to two decimals are: \n•\t1056 \n•\t5768.2 \n•\t-1.50\n•\t5877.78",
          "type": "string"
        }
      },
      "required": [
        "currency",
        "amount"
      ]
    },
    "creditorAccountGetpaymentrequestType1": {
      "description": "The account identification which can be used on payload-level to address specific accounts.  \n*Exactly one of these parameters is required..\n",
      "properties": {
        "iban": {
          "description": "This is an identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution ( IBANIdentifier ISO 20022). According to ISO 13616: Pattern: [A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}",
          "type": "string"
        },
        "bban": {
          "description": "This data elements is used for payment accounts which have no IBAN.",
          "type": "string"
        },
        "pan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI DSS requirements.",
          "type": "string"
        },
        "maskedPan": {
          "description": "Primary Account Number (PAN) of a card in a masked form (some digits are masked by a star)",
          "type": "string"
        },
        "msisdn": {
          "description": "An alias to access a payment account via a registered mobile phone number.",
          "type": "string"
        },
        "currency": {
          "description": "Currency Code(ISO 4217 Alpha 3)",
          "type": "string"
        }
      }
    },
    "creditorAddressGetpaymentrequestType1": {
      "description": "The creditor address.",
      "properties": {
        "street": {
          "description": "The street name",
          "type": "string"
        },
        "buildingNumber": {
          "description": "The building number",
          "type": "string"
        },
        "city": {
          "description": "The city",
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code",
          "type": "string"
        },
        "country": {
          "description": "The country",
          "type": "string"
        }
      },
      "required": [
        "country"
      ]
    },
    "remittanceInformationStructuredGetpaymentrequestType1": {
      "description": "A structured text that contains the remittance information and that depends on the product. Reserved for future use. ",
      "properties": {
        "reference": {
          "description": "The actual reference.",
          "type": "string"
        },
        "referenceType": {
          "description": "The reference type.",
          "type": "string"
        },
        "referenceIssuer": {
          "description": "The reference issuer.",
          "type": "string"
        }
      },
      "required": [
        "reference"
      ]
    },
    "getPaymentRequestResponseTypeTppmessagesGetpaymentrequestType1": {
      "description": "List of messages to the TPP on operational issues.",
      "properties": {
        "category": {
          "description": "Only \"ERROR\" or \"WARNING\" permitted",
          "type": "string"
        },
        "code": {
          "description": "The code of the error. Refers to the list of possible error code (Message code)",
          "type": "string"
        },
        "path": {
          "description": "The path of the element of the request message which provoked this error message",
          "type": "string"
        },
        "text": {
          "description": "Additional explaining text (max 512 characters)",
          "type": "string"
        }
      },
      "required": [
        "category",
        "code"
      ]
    },
    "periodicPaymentInitiationRequestResponseType": {
      "description": "",
      "properties": {
        "errorManagement": {
          "$ref": "#/definitions/errorManagementPeriodicpaymentinitiationrequestType1"
        },
        "transactionStatus": {
          "description": "The values defined  in the chapter Appendix – Transaction Status might be used.",
          "type": "string"
        },
        "paymentId": {
          "description": "The UUID of the generated payment initiation resource.",
          "type": "string"
        },
        "transactionFees": {
          "$ref": "#/definitions/transactionFeesPeriodicpaymentinitiationrequestType1"
        },
        "transactionFeeIndicator": {
          "description": "Accepter values: true or false\n\nIf equals \"true\", the transaction will involve specific transaction cost as shown by the ASPSP in their public price list or as agreed between ASPSP and PSU.\n\nIf equals \"false\", the transaction will not involve additional specific transaction costs to the PSU.\n",
          "type": "string"
        },
        "scaMethods": {
          "description": "This data element might be contained, if SCA is required and if the PSU has a choice between different authentication methods. \nIf this data element is contained, then there is also an hyperlink of type \"selectAuthenticationMethods\" contained in the response body.\nThese methods shall be presented towards the PSU for selection by the TPP.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/periodicPaymentInitiationRequestResponseTypeScamethodsPeriodicpaymentinitiationrequestType1"
          }
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethodPeriodicpaymentinitiationrequestType1"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeDataPeriodicpaymentinitiationrequestType1"
        },
        "_links": {
          "$ref": "#/definitions/_linksPeriodicpaymentinitiationrequestType1"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "tppMessages": {
          "description": "List of messages to the TPP on operational issues.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/periodicPaymentInitiationRequestResponseTypeTppmessagesPeriodicpaymentinitiationrequestType1"
          }
        },
        "psuCredentials": {
          "$ref": "#/definitions/periodicPaymentInitiationRequestResponseTypePsucredentialsPeriodicpaymentinitiationrequestType1"
        }
      },
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ]
    },
    "periodicPaymentInitiationRequestRequestType": {
      "description": "body",
      "properties": {
        "endToEndIdentification": {
          "description": "The unique key for each payment.",
          "type": "string"
        },
        "debtorAccount": {
          "$ref": "#/definitions/debtorAccountPeriodicpaymentinitiationrequestType2"
        },
        "ultimateDebtor": {
          "description": "Ultimate party that owes an amount of money to the ultimate creditor. Reserved for future use.",
          "type": "string"
        },
        "mailDebtor": {
          "description": "Email of the debtor",
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountPeriodicpaymentinitiationrequestType2"
        },
        "creditorAccount": {
          "$ref": "#/definitions/creditorAccountPeriodicpaymentinitiationrequestType2"
        },
        "creditorAgent": {
          "description": "The BIC associated to the account.",
          "type": "string"
        },
        "creditorName": {
          "description": "The creditor name.",
          "type": "string"
        },
        "creditorAddress": {
          "$ref": "#/definitions/creditorAddressPeriodicpaymentinitiationrequestType2"
        },
        "ultimateCreditor": {
          "description": "Ultimate party to which an amount of money is due. Reserved for future use.",
          "type": "string"
        },
        "purposeCode": {
          "description": "This code is used for defining the purpose of the payment. Reserved for future use. See Appendix - ISO Related Basic Types.",
          "type": "string"
        },
        "remittanceInformationUnstructured": {
          "description": "The remittance information (free text)",
          "type": "string"
        },
        "remittanceInformationStructured": {
          "$ref": "#/definitions/remittanceInformationStructuredPeriodicpaymentinitiationrequestType2"
        },
        "requestedExecutionDate": {
          "description": "The requested execution date. Reserved for future use. Format: YYYY-MM-DD",
          "type": "string"
        },
        "requestedExecutionTime": {
          "description": "The requested execution date and time with time zone. Reserved for future use. Format: YYYY-MM-DDTHH:mm:ss.sssZ",
          "type": "string"
        },
        "transactionType": {
          "description": "Represents the payment method used\nPossible values are:\n- unattended_terminal_transaction (e.g. transportation or parking)\n- cless_transaction\n- remote_transaction",
          "type": "string"
        },
        "merchantCategoryCode": {
          "description": "Represents the merchant category code. Is used to classify the Merchant business by the type of goods or services provides. Reserved for future use.",
          "type": "string"
        },
        "startDate": {
          "description": "The first applicable day of execution starting from this date is the first payment. \nFormat: YYYY-MM-DD",
          "type": "string"
        },
        "executionRule": {
          "description": "This data attribute defines the behavior when recurring payment dates falls on a weekend or bank holiday.\nASPSP might ignore this flag, depending on their rules in Online-Banking\n\nValid values are:\n- following\n- preceeding",
          "type": "string"
        },
        "endDate": {
          "description": "The last applicable day of execution \nIf not given, it is an infinite standing order. \nFormat: YYYY-MM-DD ",
          "type": "string"
        },
        "frequency": {
          "description": "The frequency of the recurring payment resulting from this standing order.  \nValid values are: \n- Daily\n- Weekly\n- EveryTwoWeeks\n- Monthly\n- EveryTwoMonths\n- Quarterly\n- SemiAnnual\n- Annual",
          "type": "string"
        },
        "dayOfExecution": {
          "description": "This data element ins’t mandated, to schedule a periodic payment it is enough to provide the startDate and frequency data elments. \nHowever this attribute might be mandated by the service provider in its own documentation of the support of this XS2A interface.\nThe format is following the regular expression \\d{1,2}. Example: The first day is addressed by \"1\". \nThe date is referring to the timezone of the ASPSP. ",
          "type": "string"
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "transactionType",
        "startDate",
        "frequency"
      ]
    },
    "debtorAccountPeriodicpaymentinitiationrequestType2": {
      "description": "The account identification which can be used on payload-level to address specific accounts. \n*Exactly one of these parameters is required.",
      "properties": {
        "iban": {
          "description": "This is an identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution ( IBANIdentifier ISO 20022). According to ISO 13616: Pattern: [A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}",
          "type": "string"
        },
        "bban": {
          "description": "This data elements is used for payment accounts which have no IBAN.",
          "type": "string"
        },
        "pan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI DSS requirements.",
          "type": "string"
        },
        "maskedPan": {
          "description": "Primary Account Number (PAN) of a card in a masked form (some digits are masked by a star)",
          "type": "string"
        },
        "msisdn": {
          "description": "An alias to access a payment account via a registered mobile phone number.",
          "type": "string"
        },
        "currency": {
          "description": "Currency Code(ISO 4217 Alpha 3)",
          "type": "string"
        }
      }
    },
    "instructedAmountPeriodicpaymentinitiationrequestType2": {
      "description": "Transaction amount to be checked within the funds check mechanism.",
      "properties": {
        "currency": {
          "description": "The currency code. Codes following ISO 4217 Alpha 3",
          "type": "string"
        },
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. \nThe decimal separator is a dot. \nExample: Valid representations for EUR with up to two decimals are: \n•\t1056 \n•\t5768.2 \n•\t-1.50\n•\t5877.78",
          "type": "string"
        }
      },
      "required": [
        "currency",
        "amount"
      ]
    },
    "creditorAccountPeriodicpaymentinitiationrequestType2": {
      "description": "The account identification which can be used on payload-level to address specific accounts.  \n*Exactly one of these parameters is required..\n",
      "properties": {
        "iban": {
          "description": "This is an identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution ( IBANIdentifier ISO 20022). According to ISO 13616: Pattern: [A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}",
          "type": "string"
        },
        "bban": {
          "description": "This data elements is used for payment accounts which have no IBAN.",
          "type": "string"
        },
        "pan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI DSS requirements.",
          "type": "string"
        },
        "maskedPan": {
          "description": "Primary Account Number (PAN) of a card in a masked form (some digits are masked by a star)",
          "type": "string"
        },
        "msisdn": {
          "description": "An alias to access a payment account via a registered mobile phone number.",
          "type": "string"
        },
        "currency": {
          "description": "Define the code of a currency, first two letters for the country third is for the Country. (CurrencyCode ISO 20022)",
          "type": "string"
        }
      }
    },
    "creditorAddressPeriodicpaymentinitiationrequestType2": {
      "description": "The creditor address.",
      "properties": {
        "street": {
          "description": "The street name",
          "type": "string"
        },
        "buildingNumber": {
          "description": "The building number",
          "type": "string"
        },
        "city": {
          "description": "The city",
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code",
          "type": "string"
        },
        "country": {
          "description": "The country. At least 2 characters allowed",
          "type": "string"
        }
      },
      "required": [
        "country"
      ]
    },
    "remittanceInformationStructuredPeriodicpaymentinitiationrequestType2": {
      "description": "A structured text that contains the remittance information and that depends on the product. Reserved for future use. ",
      "properties": {
        "reference": {
          "description": "The actual reference.",
          "type": "string"
        },
        "referenceType": {
          "description": "The reference type.",
          "type": "string"
        },
        "referenceIssuer": {
          "description": "The reference issuer.",
          "type": "string"
        }
      },
      "required": [
        "reference"
      ]
    },
    "errorManagementPeriodicpaymentinitiationrequestType1": {
      "description": "Object identifying the error",
      "properties": {
        "errorCode": {
          "description": "Code that identifies error occurred",
          "type": "string"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        }
      }
    },
    "transactionFeesPeriodicpaymentinitiationrequestType1": {
      "description": "Can be used by the ASPSP to transport transaction fees relevant for the underlying payments.",
      "properties": {
        "currency": {
          "description": "The currency code. Codes following ISO 4217 Alpha 3",
          "type": "string"
        },
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. \nThe decimal separator is a dot. \nExample: Valid representations for EUR with up to two decimals are: \n•\t1056 \n•\t5768.2 \n•\t-1.50\n•\t5877.78",
          "type": "string"
        }
      },
      "required": [
        "currency",
        "amount"
      ]
    },
    "periodicPaymentInitiationRequestResponseTypeScamethodsPeriodicpaymentinitiationrequestType1": {
      "description": "This data element might be contained, if SCA is required and if the PSU has a choice between different authentication methods. \nIf this data element is contained, then there is also an hyperlink of type \"selectAuthenticationMethods\" contained in the response body.\nThese methods shall be presented towards the PSU for selection by the TPP.",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\n- SMS_OTP\n- CHIP_OTP\n- PHOTO_OTP\n- PUSH_OTP\n\nSee Appendix -  AuthenticationType.",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method.",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "chosenScaMethodPeriodicpaymentinitiationrequestType1": {
      "description": "This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach, if the PSU is already identified.",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\n- SMS_OTP\n- CHIP_OTP\n- PHOTO_OTP\n- PUSH_OTP\n\nSee Appendix -  AuthenticationType.",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method.",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "challengeDataPeriodicpaymentinitiationrequestType1": {
      "description": "It is contained in addition to the data element chosenScaMethod if challenge data is needed for SCA. In rare cases this attribute is also used in the context of the psuAuthentication link.",
      "properties": {
        "image": {
          "description": "PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64 encoding , cp. [RFC 4648]. This attribute is used only, when PHOTO_OTP or CHIP_OTP is the selected SCA method ",
          "type": "string"
        },
        "data": {
          "description": "String challenge data ",
          "type": "string"
        },
        "imageLink": {
          "description": "A link where the ASPSP will provides the challenge image for the TPP. ",
          "type": "string"
        },
        "otpMaxLength": {
          "description": "The maximal length for the OTP to be typed in by the PSU. ",
          "type": "integer",
          "format": "int32"
        },
        "otpFormat": {
          "description": "The format type of the OTP to be typed in. \n\nThe admitted values are:\n-          characters\n-          integer.\n",
          "type": "string"
        },
        "additionalInformation": {
          "description": "Additional explanation for the PSU to explain e.g. fallback mechanism for the chosen SCA method. The TPP is obliged to show this to the PSU. ",
          "type": "string"
        }
      }
    },
    "_linksPeriodicpaymentinitiationrequestType1": {
      "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.\nType of links admitted in this response:\n\n“updatePsuAuthenication”: The link to the payment initiation resource, which needs to be updated by a PSU password and eventually the PSU identification if not delivered yet. This is used in case of the Embedded or Decoupled SCA approach.\n“selectAuthenticationMethod”: This is a link to a resource, where the TPP can select the applicable strong customer authentication methods for the PSU, if there were several available authentication methods. This link contained under exactly the same conditions as the data element “authenticationMethods”.\n“self” : The link to the payment initiation resource created by this request. This link can be used to retrieve the resource data.\n“status”: The link to retrieve the transaction status of the payment initiation.",
      "properties": {
        "scaOaut": {
          "$ref": "#/definitions/scaOauthLinkType"
        },
        "scaRedirect": {
          "$ref": "#/definitions/scaRedirectLinkType"
        },
        "updatePsuAuthenticationRedirect": {
          "$ref": "#/definitions/updatePsuAuthenticationRedirectLinkType"
        },
        "updatePsuAuthentication": {
          "$ref": "#/definitions/updatePsuAuthenticationLinkType"
        },
        "selectAuthenticationMethod": {
          "$ref": "#/definitions/selectAuthenticationMethodLinkType"
        },
        "self": {
          "$ref": "#/definitions/selfPeriodicpaymentinitiationrequestType2"
        },
        "status": {
          "$ref": "#/definitions/statusPeriodicpaymentinitiationrequestType2"
        }
      }
    },
    "selfPeriodicpaymentinitiationrequestType2": {
      "description": "The link to the payment initiation resource created by the request itself.\nThis link can be used later to retrieve the transaction status of the payment initiation.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "statusPeriodicpaymentinitiationrequestType2": {
      "description": "Status of the resource.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "periodicPaymentInitiationRequestResponseTypeTppmessagesPeriodicpaymentinitiationrequestType1": {
      "description": "List of messages to the TPP on operational issues.",
      "properties": {
        "category": {
          "description": "Only \"ERROR\" or \"WARNING\" permitted",
          "type": "string"
        },
        "code": {
          "description": "The code of the error. Refers to the list of possible error code (Message code)",
          "type": "string"
        },
        "path": {
          "description": "The path of the element of the request message which provoked this error message",
          "type": "string"
        },
        "text": {
          "description": "Additional explaining text (max 512 characters)",
          "type": "string"
        }
      },
      "required": [
        "category",
        "code"
      ]
    },
    "periodicPaymentInitiationRequestResponseTypePsucredentialsPeriodicpaymentinitiationrequestType1": {
      "description": "PSU Credentials on the Bank system",
      "properties": {
        "aspspProductCode": {
          "description": "Product Identification. Used to contextualize the credentials provided by the PSU for those ASPSP that need of it.",
          "type": "string"
        },
        "credentialsDetails": {
          "description": "Credentials Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/periodicPaymentInitiationRequestResponseTypePsucredentialsPeriodicpaymentinitiationrequestType1CredentialsdetailsPeriodicpaymentinitiationrequestType2"
          }
        }
      },
      "required": [
        "aspspProductCode"
      ]
    },
    "periodicPaymentInitiationRequestResponseTypePsucredentialsPeriodicpaymentinitiationrequestType1CredentialsdetailsPeriodicpaymentinitiationrequestType2": {
      "description": "Credentials Details",
      "properties": {
        "credentialDetailId": {
          "description": "Credential Detail  Identification",
          "type": "string"
        },
        "isSecret": {
          "description": "If true, it indicates that the field is a password so it should be secreted.",
          "type": "string"
        },
        "labelList": {
          "description": "The list of the labels to show to the end user. They are internationalized.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/periodicPaymentInitiationRequestResponseTypePsucredentialsPeriodicpaymentinitiationrequestType1CredentialsdetailsPeriodicpaymentinitiationrequestType2LabellistPeriodicpaymentinitiationrequestType3"
          }
        }
      },
      "required": [
        "credentialDetailId",
        "isSecret",
        "labelList"
      ]
    },
    "periodicPaymentInitiationRequestResponseTypePsucredentialsPeriodicpaymentinitiationrequestType1CredentialsdetailsPeriodicpaymentinitiationrequestType2LabellistPeriodicpaymentinitiationrequestType3": {
      "description": "The list of the labels to show to the end user. They are internationalized.",
      "properties": {
        "label": {
          "description": "The label associated to the credentials to show to the end user.",
          "type": "string"
        },
        "language": {
          "description": "Label internationalization. It specifies the language of the label.",
          "type": "string"
        }
      },
      "required": [
        "label",
        "language"
      ]
    },
    "getPeriodicPaymentStatusRequestResponseType": {
      "description": "",
      "properties": {
        "errorManagement": {
          "$ref": "#/definitions/errorManagementGetperiodicpaymentstatusrequestType1"
        },
        "transactionStatus": {
          "description": "The values defined  in the chapter Appendix – Transaction Status might be used.",
          "type": "string"
        },
        "psuAuthenticationStatus": {
          "description": "This data element is containing information about the status of the authentication of the PSU.\nAllowed values:\n- IDENTIFICATION_REQUIRED (The authentication is required in order to identify the PSU and to retrieve the PSU-ID. Typically this state occurs when the TPP doesn’t send the PSU-ID as input parameter into the paymentInitiation Request) \n- AUTHENTICATION_REQUIRED (The psu authentication is requested in order to proceed the execution of the payment request)\n- AUTHENTICATED (PSU successfully authenticated)\n- AUTHENTICATION_FAILED (PSU authentication failed)",
          "type": "string"
        },
        "scaStatus": {
          "description": "This data element is containing information about the status of the SCA method applied. This is free text but might be coded in a future version of the specification. ",
          "type": "string"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethodGetperiodicpaymentstatusrequestType1"
        },
        "scaMethods": {
          "description": "Might be contained, if several authentication methods are available. (name, type).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getPeriodicPaymentStatusRequestResponseTypeScamethodsGetperiodicpaymentstatusrequestType1"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/challengeDataUpdatepaymentresourceType1"
        },
        "_links": {
          "$ref": "#/definitions/_linksGetperiodicpaymentstatusrequestType1"
        },
        "psuMessage": {
          "description": "Message to the PSU",
          "type": "string"
        },
        "tppMessages": {
          "description": "List of messages to the TPP on operational issues.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getPeriodicPaymentStatusRequestResponseTypeTppmessagesGetperiodicpaymentstatusrequestType1"
          }
        }
      },
      "required": [
        "transactionStatus",
        "_links"
      ]
    },
    "errorManagementGetperiodicpaymentstatusrequestType1": {
      "description": "Object identifying the error",
      "properties": {
        "errorCode": {
          "description": "Code that identifies error occurred",
          "type": "string"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        }
      }
    },
    "chosenScaMethodGetperiodicpaymentstatusrequestType1": {
      "description": "This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach, if the PSU is already identified.",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\n- SMS_OTP\n- CHIP_OTP\n- PHOTO_OTP\n- PUSH_OTP\n\nSee Appendix -  AuthenticationType.",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the “authenticationType”. This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selectionu",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like “SMS OTP on phone +49160 xxxxx 28”.\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.\n",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "getPeriodicPaymentStatusRequestResponseTypeScamethodsGetperiodicpaymentstatusrequestType1": {
      "description": "Might be contained, if several authentication methods are available. (name, type).",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\n- SMS_OTP\n- CHIP_OTP\n- PHOTO_OTP\n- PUSH_OTP\n\nSee Appendix -  AuthenticationType.",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the “authenticationType”. This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selectionu",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like “SMS OTP on phone +49160 xxxxx 28”.\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.\n",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "_linksGetperiodicpaymentstatusrequestType1": {
      "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.\nType of links admitted in this response:\n\n“scaRedirect”: In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser.\n\n“selectAuthenticationMethod”: This is a link to a resource, where the TPP can select the applicable strong customer authentication methods for the PSU, if there were several available authentication methods. This link contained under exactly the same conditions as the data element “authenticationMethods”.\n\n“self” : The link to the payment initiation resource created by this request. This link can be used to retrieve the resource data.\n\n“authoriseTransaction” : The link to the payment initiation resource, where the “Payment Authorisation Request” is sent to. This is the link to the resource which will authorise the payment by checking the SCA authentication data within the Embedded SCA approach.\n\n“feePaymentConfirmation”: The link that the TPP has to follow in order to restart the payment flow after that the PSU has confirmed the payment.\n\n“scaOAuth”: In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.\n",
      "properties": {
        "scaRedirect": {
          "$ref": "#/definitions/scaRedirectLinkType"
        },
        "scaOAuth": {
          "$ref": "#/definitions/scaOauthLinkType"
        },
        "selectAuthenticationMethod": {
          "$ref": "#/definitions/selectAuthenticationMethodLinkType"
        },
        "authoriseTransaction": {
          "$ref": "#/definitions/authoriseTransactionGetperiodicpaymentstatusrequestType2"
        },
        "feePaymentConfirmation": {
          "$ref": "#/definitions/feePaymentConfirmationGetperiodicpaymentstatusrequestType2"
        }
      }
    },
    "authoriseTransactionGetperiodicpaymentstatusrequestType2": {
      "description": "The link to the payment initiation or consent resource, where the “Transaction Authorisation”Request” is sent to. This is the link to the resource which will authorise the payment or the consent by checking the SCA authentication data within the Embedded SCA approach.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "feePaymentConfirmationGetperiodicpaymentstatusrequestType2": {
      "description": "The link of the API for fee payment confirmation",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "getPeriodicPaymentStatusRequestResponseTypeTppmessagesGetperiodicpaymentstatusrequestType1": {
      "description": "List of messages to the TPP on operational issues.",
      "properties": {
        "category": {
          "description": "Only \"ERROR\" or \"WARNING\" permitted",
          "type": "string"
        },
        "code": {
          "description": "The code of the error. Refers to the list of possible error code ",
          "type": "string"
        },
        "path": {
          "description": "The path of the element of the request message which provoked this error message",
          "type": "string"
        },
        "text": {
          "description": "Additional explaining text (max 512 characters)",
          "type": "string"
        }
      },
      "required": [
        "category",
        "code"
      ]
    },
    "updatePeriodicPaymentResourceResponseType": {
      "description": "",
      "properties": {
        "errorManagement": {
          "$ref": "#/definitions/errorManagementUpdateperiodicpaymentresourceType1"
        },
        "psuId": {
          "description": "The PSU identifier.",
          "type": "string"
        },
        "psuIdType": {
          "description": "The PSU identifier type.",
          "type": "string"
        },
        "psuCorporateId": {
          "description": "The PSU corporate identifier. This field is relevant only in a corporate context.",
          "type": "string"
        },
        "psuCorporateIdType": {
          "description": "The PSU corporate identifier. Might be mandated by the ASPSP in addition if the PSU-Corporate-ID is contained.",
          "type": "string"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/chosenScaMethodUpdateperiodicpaymentresourceType1"
        },
        "challengeData": {
          "$ref": "#/definitions/challengeDataUpdateperiodicpaymentresourceType1"
        },
        "scaMethods": {
          "description": "This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach, if the PSU is already identified.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/updatePeriodicPaymentResourceResponseTypeScamethodUpdateperiodicpaymentresourceType1"
          }
        },
        "_links": {
          "$ref": "#/definitions/_linksUpdateperiodicpaymentresourceType1"
        },
        "transactionStatus": {
          "description": "The values defined  in the chapter Appendix – Transaction Status might be used.",
          "type": "string"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU, e.g. in a Decoupled SCA Approach.",
          "type": "string"
        },
        "tppMessages": {
          "description": "List of messages to the TPP on operational issues.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/updatePeriodicPaymentResourceResponseTypeTppmessagesUpdateperiodicpaymentresourceType1"
          }
        },
        "psuCredentials": {
          "$ref": "#/definitions/psuCredentialsUpdateperiodicpaymentresourceType1"
        },
        "transactionFees": {
          "$ref": "#/definitions/transactionFeesUpdateperiodicpaymentresourceType1"
        },
        "transactionFeeIndicator": {
          "description": "Accepter values: true or false\n\nIf equals “true”, the transaction will involve specific transaction cost as shown by the ASPSP in their public price list or as agreed between ASPSP and PSU.\n\nIf equals “false”, the transaction will not involve additional specific transaction costs to the PSU.",
          "type": "string"
        }
      },
      "required": [
        "_links",
        "transactionStatus"
      ]
    },
    "updatePeriodicPaymentResourceRequestType": {
      "description": "body",
      "properties": {
        "psuCredentials": {
          "$ref": "#/definitions/psuCredentialsUpdateperiodicpaymentresourceType2"
        },
        "authenticationMethodId": {
          "description": "The authentication method ID as provided by the ASPSP.\n\n**Mandatory if the header param operation-name is one of \"updatePsuData\" or \"selectScaForAccountSelection\" and the request is an Update psu data for select authentication.\nIf this field is filled the psuCredentials must be empty.\n",
          "type": "string"
        },
        "scaAuthenticationData": {
          "description": "SCA authentication data, depending on the chosen authentication method. If the data is binary, then it is base64 encoded.\n\n*** Mandatory if selected operation-name is transactionAuthorisation.\n",
          "type": "string"
        }
      }
    },
    "psuCredentialsUpdateperiodicpaymentresourceType2": {
      "description": "PSU Credentials on the Bank system  \n*Mandatory if the header param operation-name is one of \"updatePsuData\" or \"updatePsuDataForAccountSelection\" and the request is an “Update psu data for authentication”.\nIf this field is filled the authenticationMethodId must be empty.\n",
      "properties": {
        "productCode": {
          "description": "Product Identification. Used to contextualize the credentials provided by the PSU for those ASPSP that need of it.",
          "type": "string"
        },
        "credentialsDetails": {
          "description": "Credentials Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/psuCredentialsUpdateperiodicpaymentresourceType2CredentialsdetailsUpdateperiodicpaymentresourceType3"
          }
        }
      },
      "required": [
        "productCode",
        "credentialsDetails"
      ]
    },
    "psuCredentialsUpdateperiodicpaymentresourceType2CredentialsdetailsUpdateperiodicpaymentresourceType3": {
      "description": "Credentials Details",
      "properties": {
        "credentialDetailId": {
          "description": "Credential Detail  Identification",
          "type": "string"
        },
        "credentialValue": {
          "description": "Credential Value",
          "type": "string"
        }
      },
      "required": [
        "credentialDetailId",
        "credentialValue"
      ]
    },
    "errorManagementUpdateperiodicpaymentresourceType1": {
      "description": "Object identifying the error",
      "properties": {
        "errorCode": {
          "description": "Code that identifies error occurred",
          "type": "string"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        }
      }
    },
    "chosenScaMethodUpdateperiodicpaymentresourceType1": {
      "description": "This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach, if the PSU is already identified.",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\n- SMS_OTP\n- CHIP_OTP\n- PHOTO_OTP\n- PUSH_OTP\n\nSee Appendix -  AuthenticationType.",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method.",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "challengeDataUpdateperiodicpaymentresourceType1": {
      "description": "It is contained in addition to the data element chosenScaMethod if challenge data is needed for SCA. In rare cases this attribute is also used in the context of the psuAuthentication link.",
      "properties": {
        "image": {
          "description": "PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64 encoding , cp. [RFC 4648]. This attribute is used only, when PHOTO_OTP or CHIP_OTP is the selected SCA method ",
          "type": "string"
        },
        "data": {
          "description": "String challenge data ",
          "type": "string"
        },
        "imageLink": {
          "description": "A link where the ASPSP will provides the challenge image for the TPP. ",
          "type": "string"
        },
        "otpMaxLength": {
          "description": "The maximal length for the OTP to be typed in by the PSU. ",
          "type": "integer",
          "format": "int32"
        },
        "otpFormat": {
          "description": "The format type of the OTP to be typed in. \n\nThe admitted values are:\n-          characters\n-          integer.\n",
          "type": "string"
        },
        "additionalInformation": {
          "description": "Additional explanation for the PSU to explain e.g. fallback mechanism for the chosen SCA method. The TPP is obliged to show this to the PSU. ",
          "type": "string"
        }
      }
    },
    "updatePeriodicPaymentResourceResponseTypeScamethodUpdateperiodicpaymentresourceType1": {
      "description": "This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach, if the PSU is already identified.",
      "properties": {
        "authenticationType": {
          "description": "The field describes the type of the authentication method.\nExample values are:\n\n- SMS_OTP\n- CHIP_OTP\n- PHOTO_OTP\n- PUSH_OTP\n\nSee Appendix -  AuthenticationType.\n",
          "type": "string"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
          "type": "string"
        },
        "name": {
          "description": "This could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.",
          "type": "string"
        },
        "explanation": {
          "description": "This is a description about the authentication method.",
          "type": "string"
        }
      },
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "_linksUpdateperiodicpaymentresourceType1": {
      "description": "A list of hyperlinks to be recognised by the TPP.\nType of links admitted in this response (which might be extended by single ASPSPs as indicated in its XS2A documentation):\n\"scaRedirect\": In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser.\n\"scaOAuth\": In case of an OAuth2 based Redirect Approach, the ASPSP is transmitting the link where the configuration of the OAuth2 Server is defined.\n\"updatePsuAuthentication\": The link to the account information resource, which needs to be updated by a PSU password and eventually the PSU identification if not delivered yet. This is used in a case of the Embedded SCA approach.\n\"selectAuthenticationMethod\": This is a link to a resource, where the TPP can select the applicable SCA for the PSU, if there were several available authentication methods. This link is only contained under exactly the same conditions as the data element \"scaMethods\", see above.,.\n“self”: The link to the resource itself.\n\"status\": The link to retrieve the transaction status of the account information consent.",
      "properties": {
        "scaRedirect": {
          "$ref": "#/definitions/scaRedirectLinkType"
        },
        "scaOAuth": {
          "$ref": "#/definitions/scaOauthLinkType"
        },
        "updatePsuAuthentication": {
          "$ref": "#/definitions/updatePsuAuthenticationLinkType"
        },
        "selectAuthenticationMethod": {
          "$ref": "#/definitions/selectAuthenticationMethodLinkType"
        },
        "authoriseTransaction": {
          "$ref": "#/definitions/authoriseTransactionUpdateperiodicpaymentresourceType2"
        },
        "self": {
          "$ref": "#/definitions/selfUpdateperiodicpaymentresourceType2"
        },
        "status": {
          "$ref": "#/definitions/statusUpdateperiodicpaymentresourceType2"
        },
        "feePaymentConfirmation": {
          "$ref": "#/definitions/feePaymentConfirmationUpdateperiodicpaymentresourceType2"
        }
      }
    },
    "authoriseTransactionUpdateperiodicpaymentresourceType2": {
      "description": "The link to the payment initiation or consent resource, where the \"Transaction Authorisation\"Request\" is sent to. This is the link to the resource which will authorise the payment or the consent by checking the SCA authentication data within the Embedded SCA approach.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "selfUpdateperiodicpaymentresourceType2": {
      "description": "The link to the payment initiation resource created by the request itself.\nThis link can be used later to retrieve the transaction status of the payment initiation.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "statusUpdateperiodicpaymentresourceType2": {
      "description": "Status of the resource.",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "feePaymentConfirmationUpdateperiodicpaymentresourceType2": {
      "description": "The link of the API for fee payment confirmation",
      "properties": {
        "href": {
          "description": "This field contains a link to a resource.",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "updatePeriodicPaymentResourceResponseTypeTppmessagesUpdateperiodicpaymentresourceType1": {
      "description": "List of messages to the TPP on operational issues.",
      "properties": {
        "category": {
          "description": "Only \"ERROR\" or \"WARNING\" permitted",
          "type": "string"
        },
        "code": {
          "description": "The code of the error. Refers to the list of possible error code (Message code)",
          "type": "string"
        },
        "path": {
          "description": "The path of the element of the request message which provoked this error message",
          "type": "string"
        },
        "text": {
          "description": "Additional explaining text (max 512 characters)",
          "type": "string"
        }
      },
      "required": [
        "category",
        "code"
      ]
    },
    "psuCredentialsUpdateperiodicpaymentresourceType1": {
      "description": "PSU Credentials on the Bank system",
      "properties": {
        "aspspProductCode": {
          "description": "Product Identification. Used to contextualize the credentials provided by the PSU for those ASPSP that need of it.",
          "type": "string"
        },
        "credentialsDetails": {
          "description": "Credentials Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/psuCredentialsUpdateperiodicpaymentresourceType1CredentialsdetailsUpdateperiodicpaymentresourceType2"
          }
        }
      },
      "required": [
        "aspspProductCode"
      ]
    },
    "psuCredentialsUpdateperiodicpaymentresourceType1CredentialsdetailsUpdateperiodicpaymentresourceType2": {
      "description": "Credentials Details",
      "properties": {
        "credentialDetailId": {
          "description": "Credential Detail  Identification",
          "type": "string"
        },
        "isSecret": {
          "description": "If true, it indicates that the field is a password so it should be secreted.",
          "type": "string"
        },
        "labelList": {
          "description": "The list of the labels to show to the end user. They are internationalized.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/psuCredentialsUpdateperiodicpaymentresourceType1CredentialsdetailsUpdateperiodicpaymentresourceType2LabellistUpdateperiodicpaymentresourceType3"
          }
        }
      },
      "required": [
        "credentialDetailId",
        "isSecret",
        "labelList"
      ]
    },
    "psuCredentialsUpdateperiodicpaymentresourceType1CredentialsdetailsUpdateperiodicpaymentresourceType2LabellistUpdateperiodicpaymentresourceType3": {
      "description": "The list of the labels to show to the end user. They are internationalized.",
      "properties": {
        "label": {
          "description": "The label associated to the credentials to show to the end user.",
          "type": "string"
        },
        "language": {
          "description": "Label internationalization. It specifies the language of the label.",
          "type": "string"
        }
      },
      "required": [
        "label",
        "language"
      ]
    },
    "transactionFeesUpdateperiodicpaymentresourceType1": {
      "description": "Can be used by the ASPSP to transport transaction fees relevant for the underlying payments.",
      "properties": {
        "currency": {
          "description": "The currency code. Codes following ISO 4217 Alpha 3",
          "type": "string"
        },
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. \nThe decimal separator is a dot. \nExample: Valid representations for EUR with up to two decimals are: \n•\t1056 \n•\t5768.2 \n•\t-1.50\n•\t5877.78",
          "type": "string"
        }
      },
      "required": [
        "currency",
        "amount"
      ]
    }
  },
  "x-am-adminName": "_adminName",
  "x-am-adminPassword": "_adminPassword",
  "x-am-apiServiceUrl": "_apiServiceUrl",
  "x-am-userServiceUrl": "_userServiceUrl",
  "x-am-tenant-domain": "_tenantDomain",
  "x-am-tenant-adminName": "_tenantAdminName",
  "x-am-tenant-adminPassword": "_tenantAdminPassword",
  "x-am-tenant-firstName": "_tenantFirstName",
  "x-am-tenant-lastName": "_tenantLastName",
  "x-am-tenant-email": "_tenantEmail",
  "x-am-api-publisher-username": "_publisherUsername",
  "x-am-api-publisher-password": "_publisherPassword",
  "x-am-api-visibility": "public",
  "x-am-api-tier": "Unlimited",
  "x-am-api-tiersCollection": "Unlimited,Gold,Silver,Bronze",
  "x-am-api-endpointType": "HTTP",
  "x-am-api-timeout": 120,
  "x-am-api-suspended": "",
  "x-am-api-tenantsSubscription": "all_tenants",
  "x-am-tags": "consent, psu, data, authentication, tpp, transaction, sca, aspsp",
  "x-am-api-production-endpoint": "_protocol://_psd2orchdns:_psd2orchport/cxf/psd2orchestrator/pis",
  "x-am-api-responseCache": "Disabled",
  "x-am-api-cacheTimeout": "500",
  "x-am-api-sequenceIn": "Not Applicable",
  "x-am-api-sequenceOut": "Not Applicable"
}